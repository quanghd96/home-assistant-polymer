{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-gauge-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","entities","html","map","entityConf","index","hass","entity","_valueChanged","_addEntity","ev","target","newConfigEntities","concat","fireEvent","splice","Object","assign","static","css","LitElement","cardConfigStruct","type","name","unit","min","max","severity","theme","HuiGaugeCardEditor","config","_useSeverity","_config","number","undefined","configElementStyle","_name","_entity","_unit","_theme","_min","_max","_toggleSeverity","_severity","green","_severityChanged","yellow","red","checked","configValue","Number","isNaN"],"mappings":"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","file":"chunk.88a4a63168ed83ee670d.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <ha-entity-picker\n              .hass=\"${this.hass}\"\n              .value=\"${entityConf.entity}\"\n              .index=\"${index}\"\n              @change=\"${this._valueChanged}\"\n              allow-custom-entity\n            ></ha-entity-picker>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GaugeCardConfig, SeverityConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  unit: \"string?\",\n  min: \"number?\",\n  max: \"number?\",\n  severity: \"object?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-gauge-card-editor\")\nexport class HuiGaugeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GaugeCardConfig;\n\n  private _useSeverity?: boolean;\n\n  public setConfig(config: GaugeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._useSeverity = !!config.severity;\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _min(): number {\n    return this._config!.number || 0;\n  }\n\n  get _max(): number {\n    return this._config!.max || 100;\n  }\n\n  get _severity(): SeverityConfig | undefined {\n    return this._config!.severity || undefined;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=${\"name\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"sensor\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Unit\"\n            .value=\"${this._unit}\"\n            .configValue=${\"unit\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            label=\"Minimum\"\n            .value=\"${this._min}\"\n            .configValue=${\"min\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            label=\"Maximum\"\n            .value=\"${this._max}\"\n            .configValue=${\"max\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._useSeverity !== false}\"\n            @change=\"${this._toggleSeverity}\"\n            >Define Severity?</paper-toggle-button\n          >\n          <div class=\"severity\">\n            <paper-input\n              type=\"number\"\n              label=\"Green\"\n              .value=\"${this._severity ? this._severity.green : 0}\"\n              .configValue=${\"green\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Yellow\"\n              .value=\"${this._severity ? this._severity.yellow : 0}\"\n              .configValue=${\"yellow\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Red\"\n              .value=\"${this._severity ? this._severity.red : 0}\"\n              .configValue=${\"red\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .severity {\n        display: none;\n        width: 100%;\n        padding-left: 16px;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n      .severity > * {\n        flex: 1 0 30%;\n        padding-right: 4px;\n      }\n      paper-toggle-button[checked] ~ .severity {\n        display: flex;\n      }\n    `;\n  }\n\n  private _toggleSeverity(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    this._config.severity = target.checked\n      ? {\n          green: 0,\n          yellow: 0,\n          red: 0,\n        }\n      : undefined;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _severityChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const severity = {\n      ...this._config.severity,\n      [target.configValue!]: Number(target.value),\n    };\n    this._config = {\n      ...this._config,\n      severity,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card-editor\": HuiGaugeCardEditor;\n  }\n}\n"],"sourceRoot":""}