{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/components/entity/state-badge.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/panels/developer-tools/state/developer-tools-state.js"],"names":["__webpack_require__","d","__webpack_exports__","EventsMixin","_polymer_polymer_lib_utils_mixin__WEBPACK_IMPORTED_MODULE_0__","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_1__","dedupingMixin","superClass","fire","type","detail","options","fireEvent","node","this","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","undefined","attributes","friendly_name","computeObjectId","entity_id","replace","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","computeDomain","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","domain","state","console","warn","DEFAULT_DOMAIN_ICON","HaIcon","ironIconClass","customElements","get","loaded","[object Object]","args","super","_iconsetName","listen","eventName","methodName","e","then","bind","define","StateBadge","_LitElement","_initialize","property","query","html","overrideIcon","stateIcon","changedProps","has","iconStyle","color","filter","hostStyle","backgroundImage","entity_picture","display","hs_color","hue","sat","brightness","errorMessage","Object","assign","_icon","style","css","LitElement","entityId","substr","indexOf","HaEntityPicker","Boolean","attribute","memoizeOne","hass","domainFilter","entityFilter","states","entityIds","keys","eid","sort","map","key","value","_get","_getPrototypeOf","prototype","call","_opened","_hass","_getStates","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","label","localize","disabled","length","ev","setTimeout","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","domainIcons","binary_sensor","activated","device_class","cover","open","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","UNIT_C","UNIT_F","has_date","has_time","icon","r","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_5__","_mixins_events_mixin__WEBPACK_IMPORTED_MODULE_8__","PolymerElement","template","properties","_entityId","String","_entityFilter","_stateFilter","_attributeFilter","_state","_stateAttributes","_showAttributes","_entities","Array","computed","entitySelected","entity","JSON","stringify","preventDefault","entityMoreInfo","handleSetState","attr","attrRaw","parse","err","callApi","computeEntities","includes","toLowerCase","attributeFilter","colonIndex","multiMode","keyFilter","valueFilter","substring","trim","attributeKeys","i","attributeValue","entityA","entityB","computeShowEntitiesPlaceholder","computeShowAttributes","narrow","attributeString","output","isArray"],"mappings":"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","file":"chunk.dd1cd3641c4e5e79a6af.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeObjectId from \"./compute_object_id\";\n\nexport default (stateObj: HassEntity): string =>\n  stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeDomain from \"./compute_domain\";\n\nexport default function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n};\n\nexport default function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  PropertyValues,\n  query,\n} from \"lit-element\";\nimport \"../ha-icon\";\nimport computeStateDomain from \"../../common/entity/compute_state_domain\";\nimport stateIcon from \"../../common/entity/state_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"../ha-icon\";\n\nclass StateBadge extends LitElement {\n  @property() public stateObj?: HassEntity;\n  @property() public overrideIcon?: string;\n  @query(\"ha-icon\") private _icon!: HaIcon;\n\n  protected render(): TemplateResult | void {\n    const stateObj = this.stateObj;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    return html`\n      <ha-icon\n        id=\"icon\"\n        data-domain=${computeStateDomain(stateObj)}\n        data-state=${stateObj.state}\n        .icon=${this.overrideIcon || stateIcon(stateObj)}\n      ></ha-icon>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"stateObj\") || !this.stateObj) {\n      return;\n    }\n    const stateObj = this.stateObj;\n\n    const iconStyle: Partial<CSSStyleDeclaration> = {\n      color: \"\",\n      filter: \"\",\n    };\n    const hostStyle: Partial<CSSStyleDeclaration> = {\n      backgroundImage: \"\",\n    };\n    if (stateObj) {\n      // hide icon if we have entity picture\n      if (stateObj.attributes.entity_picture && !this.overrideIcon) {\n        hostStyle.backgroundImage =\n          \"url(\" + stateObj.attributes.entity_picture + \")\";\n        iconStyle.display = \"none\";\n      } else {\n        if (stateObj.attributes.hs_color) {\n          const hue = stateObj.attributes.hs_color[0];\n          const sat = stateObj.attributes.hs_color[1];\n          if (sat > 10) {\n            iconStyle.color = `hsl(${hue}, 100%, ${100 - sat / 2}%)`;\n          }\n        }\n        if (stateObj.attributes.brightness) {\n          const brightness = stateObj.attributes.brightness;\n          if (typeof brightness !== \"number\") {\n            const errorMessage = `Type error: state-badge expected number, but type of ${\n              stateObj.entity_id\n            }.attributes.brightness is ${typeof brightness} (${brightness})`;\n            // tslint:disable-next-line\n            console.warn(errorMessage);\n          }\n          // lowest brighntess will be around 50% (that's pretty dark)\n          iconStyle.filter = `brightness(${(brightness + 245) / 5}%)`;\n        }\n      }\n    }\n    Object.assign(this._icon.style, iconStyle);\n    Object.assign(this.style, hostStyle);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        color: var(--paper-item-icon-color, #44739e);\n        border-radius: 50%;\n        height: 40px;\n        text-align: center;\n        background-size: cover;\n        line-height: 40px;\n      }\n\n      ha-icon {\n        transition: color 0.3s ease-in-out, filter 0.3s ease-in-out;\n      }\n\n      /* Color the icon if light or sun is on */\n      ha-icon[data-domain=\"light\"][data-state=\"on\"],\n      ha-icon[data-domain=\"switch\"][data-state=\"on\"],\n      ha-icon[data-domain=\"binary_sensor\"][data-state=\"on\"],\n      ha-icon[data-domain=\"fan\"][data-state=\"on\"],\n      ha-icon[data-domain=\"sun\"][data-state=\"above_horizon\"] {\n        color: var(--paper-item-icon-active-color, #fdd835);\n      }\n\n      /* Color the icon if unavailable */\n      ha-icon[data-state=\"unavailable\"] {\n        color: var(--state-icon-unavailable-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-badge\": StateBadge;\n  }\n}\n\ncustomElements.define(\"state-badge\", StateBadge);\n","/** Compute the object ID of a state. */\nexport default function computeObjectId(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport domainIcon from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport default function sensorIcon(state: HassEntity) {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n}\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nimport computeDomain from \"./compute_domain\";\nimport domainIcon from \"./domain_icon\";\n\nimport binarySensorIcon from \"./binary_sensor_icon\";\nimport coverIcon from \"./cover_icon\";\nimport sensorIcon from \"./sensor_icon\";\nimport inputDateTimeIcon from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport default function stateIcon(state: HassEntity) {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport default function binarySensorIcon(state: HassEntity) {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n}\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport domainIcon from \"./domain_icon\";\n\nexport default function coverIcon(state: HassEntity): string {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n}\n","/** Return an icon representing an input datetime state. */\nimport domainIcon from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport default function inputDateTimeIcon(state: HassEntity): string {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n}\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport \"../../../resources/ha-style\";\nimport { EventsMixin } from \"../../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPanelDevState extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n          display: block;\n          padding: 16px;\n          direction: ltr;\n        }\n\n        ha-entity-picker,\n        .state-input,\n        paper-textarea {\n          display: block;\n          max-width: 400px;\n        }\n\n        .entities th {\n          text-align: left;\n        }\n\n        .entities tr {\n          vertical-align: top;\n        }\n\n        .entities tr:nth-child(odd) {\n          background-color: var(--table-row-background-color, #fff);\n        }\n\n        .entities tr:nth-child(even) {\n          background-color: var(--table-row-alternative-background-color, #eee);\n        }\n        .entities td {\n          padding: 4px;\n        }\n        .entities paper-icon-button {\n          height: 24px;\n          padding: 0;\n        }\n        .entities td:nth-child(3) {\n          white-space: pre-wrap;\n          word-break: break-word;\n        }\n\n        .entities a {\n          color: var(--primary-color);\n        }\n      </style>\n\n      <div>\n        <p>\n          Set the representation of a device within JAVIS Home.<br />\n          This will not communicate with the actual device.\n        </p>\n\n        <ha-entity-picker\n          autofocus\n          hass=\"[[hass]]\"\n          value=\"{{_entityId}}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          label=\"State\"\n          required\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n          value=\"{{_state}}\"\n          class=\"state-input\"\n        ></paper-input>\n        <paper-textarea\n          label=\"State attributes (JSON, optional)\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          spellcheck=\"false\"\n          value=\"{{_stateAttributes}}\"\n        ></paper-textarea>\n        <mwc-button on-click=\"handleSetState\" raised>Set State</mwc-button>\n      </div>\n\n      <h1>Current entities</h1>\n      <table class=\"entities\">\n        <tr>\n          <th>Entity</th>\n          <th>State</th>\n          <th hidden$=\"[[narrow]]\">\n            Attributes\n            <paper-checkbox checked=\"{{_showAttributes}}\"></paper-checkbox>\n          </th>\n        </tr>\n        <tr>\n          <th>\n            <paper-input\n              label=\"Filter entities\"\n              type=\"search\"\n              value=\"{{_entityFilter}}\"\n            ></paper-input>\n          </th>\n          <th>\n            <paper-input\n              label=\"Filter states\"\n              type=\"search\"\n              value=\"{{_stateFilter}}\"\n            ></paper-input>\n          </th>\n          <th hidden$=\"[[!computeShowAttributes(narrow, _showAttributes)]]\">\n            <paper-input\n              label=\"Filter attributes\"\n              type=\"search\"\n              value=\"{{_attributeFilter}}\"\n            ></paper-input>\n          </th>\n        </tr>\n        <tr hidden$=\"[[!computeShowEntitiesPlaceholder(_entities)]]\">\n          <td colspan=\"3\">No entities</td>\n        </tr>\n        <template is=\"dom-repeat\" items=\"[[_entities]]\" as=\"entity\">\n          <tr>\n            <td>\n              <paper-icon-button\n                on-click=\"entityMoreInfo\"\n                icon=\"hass:open-in-new\"\n                alt=\"More Info\"\n                title=\"More Info\"\n              >\n              </paper-icon-button>\n              <a href=\"#\" on-click=\"entitySelected\">[[entity.entity_id]]</a>\n            </td>\n            <td>[[entity.state]]</td>\n            <template\n              is=\"dom-if\"\n              if=\"[[computeShowAttributes(narrow, _showAttributes)]]\"\n            >\n              <td>[[attributeString(entity)]]</td>\n            </template>\n          </tr>\n        </template>\n      </table>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      _entityId: {\n        type: String,\n        value: \"\",\n      },\n\n      _entityFilter: {\n        type: String,\n        value: \"\",\n      },\n\n      _stateFilter: {\n        type: String,\n        value: \"\",\n      },\n\n      _attributeFilter: {\n        type: String,\n        value: \"\",\n      },\n\n      _state: {\n        type: String,\n        value: \"\",\n      },\n\n      _stateAttributes: {\n        type: String,\n        value: \"\",\n      },\n\n      _showAttributes: {\n        type: Boolean,\n        value: true,\n      },\n\n      _entities: {\n        type: Array,\n        computed:\n          \"computeEntities(hass, _entityFilter, _stateFilter, _attributeFilter)\",\n      },\n    };\n  }\n\n  entitySelected(ev) {\n    var state = ev.model.entity;\n    this._entityId = state.entity_id;\n    this._state = state.state;\n    this._stateAttributes = JSON.stringify(state.attributes, null, \"  \");\n    ev.preventDefault();\n  }\n\n  entityMoreInfo(ev) {\n    ev.preventDefault();\n    this.fire(\"hass-more-info\", { entityId: ev.model.entity.entity_id });\n  }\n\n  handleSetState() {\n    var attr;\n    var attrRaw = this._stateAttributes.replace(/^\\s+|\\s+$/g, \"\");\n    try {\n      attr = attrRaw ? JSON.parse(attrRaw) : {};\n    } catch (err) {\n      /* eslint-disable no-alert */\n      alert(\"Error parsing JSON: \" + err);\n      /* eslint-enable no-alert */\n      return;\n    }\n\n    this.hass.callApi(\"POST\", \"states/\" + this._entityId, {\n      state: this._state,\n      attributes: attr,\n    });\n  }\n\n  computeEntities(hass, _entityFilter, _stateFilter, _attributeFilter) {\n    return Object.keys(hass.states)\n      .map(function(key) {\n        return hass.states[key];\n      })\n      .filter(function(value) {\n        if (!value.entity_id.includes(_entityFilter.toLowerCase())) {\n          return false;\n        }\n\n        if (!value.state.includes(_stateFilter.toLowerCase())) {\n          return false;\n        }\n\n        if (_attributeFilter !== \"\") {\n          var attributeFilter = _attributeFilter.toLowerCase();\n          var colonIndex = attributeFilter.indexOf(\":\");\n          var multiMode = colonIndex !== -1;\n\n          var keyFilter = attributeFilter;\n          var valueFilter = attributeFilter;\n\n          if (multiMode) {\n            // we need to filter keys and values separately\n            keyFilter = attributeFilter.substring(0, colonIndex).trim();\n            valueFilter = attributeFilter.substring(colonIndex + 1).trim();\n          }\n\n          var attributeKeys = Object.keys(value.attributes);\n\n          for (var i = 0; i < attributeKeys.length; i++) {\n            var key = attributeKeys[i];\n\n            if (key.includes(keyFilter) && !multiMode) {\n              return true; // in single mode we're already satisfied with this match\n            }\n            if (!key.includes(keyFilter) && multiMode) {\n              continue;\n            }\n\n            var attributeValue = value.attributes[key];\n\n            if (\n              attributeValue !== null &&\n              JSON.stringify(attributeValue)\n                .toLowerCase()\n                .includes(valueFilter)\n            ) {\n              return true;\n            }\n          }\n\n          // there are no attributes where the key and/or value can be matched\n          return false;\n        }\n\n        return true;\n      })\n      .sort(function(entityA, entityB) {\n        if (entityA.entity_id < entityB.entity_id) {\n          return -1;\n        }\n        if (entityA.entity_id > entityB.entity_id) {\n          return 1;\n        }\n        return 0;\n      });\n  }\n\n  computeShowEntitiesPlaceholder(_entities) {\n    return _entities.length === 0;\n  }\n\n  computeShowAttributes(narrow, _showAttributes) {\n    return !narrow && _showAttributes;\n  }\n\n  attributeString(entity) {\n    var output = \"\";\n    var i;\n    var keys;\n    var key;\n    var value;\n\n    for (i = 0, keys = Object.keys(entity.attributes); i < keys.length; i++) {\n      key = keys[i];\n      value = entity.attributes[key];\n      if (!Array.isArray(value) && value instanceof Object) {\n        value = JSON.stringify(value, null, \"  \");\n      }\n      output += key + \": \" + value + \"\\n\";\n    }\n\n    return output;\n  }\n}\n\ncustomElements.define(\"developer-tools-state\", HaPanelDevState);\n"],"sourceRoot":""}