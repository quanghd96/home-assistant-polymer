{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/components/buttons/ha-call-api-button.js","webpack:///./src/data/alexa.ts","webpack:///./src/data/webhook.ts","webpack:///./src/panels/config/cloud/dialog-manage-cloudhook/show-dialog-manage-cloudhook.ts","webpack:///./src/panels/config/cloud/account/cloud-webhooks.ts","webpack:///./src/panels/config/cloud/account/cloud-alexa-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-google-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-remote-pref.ts","webpack:///./src/panels/config/cloud/dialog-cloud-certificate/show-dialog-cloud-certificate.ts","webpack:///./src/panels/config/cloud/account/cloud-account.js","webpack:///./src/panels/config/cloud/login/cloud-login.js","webpack:///./src/panels/config/cloud/ha-config-cloud.ts"],"names":["__webpack_require__","d","__webpack_exports__","EventsMixin","_polymer_polymer_lib_utils_mixin__WEBPACK_IMPORTED_MODULE_0__","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_1__","dedupingMixin","superClass","fire","type","detail","options","fireEvent","node","this","properties","hass","Object","localize","Function","computed","__computeLocalize","HaCard","_LitElement","[object Object]","args","super","_initialize","property","css","html","header","LitElement","customElements","define","HaIcon","ironIconClass","get","loaded","_iconsetName","listen","eventName","methodName","e","then","bind","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_1__","PolymerElement","template","narrow","Boolean","isWide","value","computeContentClasses","classes","computeClasses","fecha__WEBPACK_IMPORTED_MODULE_0__","toLocaleStringSupportsOptions","Date","toLocaleString","name","dateObj","locales","year","month","day","hour","minute","fecha","format","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_3__","progress","disabled","tempClass","className","classList","$","container","add","setTimeout","remove","ready","addEventListener","ev","buttonTapped","stopPropagation","actionSuccess","actionError","computeDisabled","_common_navigate__WEBPACK_IMPORTED_MODULE_1__","navigate","_ha_icon__WEBPACK_IMPORTED_MODULE_1__","connectedCallback","icon","window","getComputedStyle","direction","lit_element__WEBPACK_IMPORTED_MODULE_0__","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_2__","render","_buttonTapped","constructor","method","data","path","String","progressButton","renderRoot","querySelector","eventData","resp","callApi","success","response","err","fetchCloudAlexaEntities","syncCloudAlexaEntities","callWS","fetchWebhooks","showManageCloudhookDialog","element","webhookDialogParams","dialogTag","dialogImport","Promise","all","dialogParams","cloudStatus","_cloudHooks","_localHooks","_progress","_fetchData","renderStyle","_renderBody","updated","changedProps","has","prefs","cloudhooks","length","map","entry","domain","toLowerCase","webhook_id","includes","_handleManageButton","_enableWebhook","_showDialog","webhookId","webhook","find","ent","cloudhook","disableHook","_disableWebhook","currentTarget","parentElement","updatedWebhook","createCloudhook","alert","message","filter","wid","assign","deleteCloudhook","newHooks","_objectWithoutPropertiesLoose","_toPropertyKey","config","components","CloudAlexaPref","_decorate","F","kind","decorators","key","alexa_enabled","alexa_report_state","_enabledToggleChanged","_reportToggleChanged","_handleSync","_syncing","async","body","toggle","target","updateCloudPref","checked","static","google_enabled","google_secure_devices_pin","_toggleChanged","_pinChanged","id","input","styles","cloud_remote_pref_decorate","customElement","remote_connected","remote_domain","remote_certificate","_openCertInfo","certificateInfo","connectCloudRemote","disconnectCloudRemote","LocalizeMixin","_subscription","_fetchSubscriptionInfo","_computeRemoteConnected","connected","fetchCloudSubscriptionInfo","provider","cloud","handleLogout","_formatSubscription","subInfo","description","human_description","plan_renewal_date","replace","formatDateTime","language","NavigateMixin","email","notify","_password","_requestInProgress","flashMessage","_error","observers","requestAnimationFrame","flashRipple","simulatedRipple","_inputChanged","invalid","password","_keyDown","keyCode","_handleLogin","preventDefault","focus","setProperties","errCode","code","props","_handleRegister","_handleForgotPassword","_dismissFlash","LOGGED_IN_URLS","NOT_LOGGED_IN_URLS","HaConfigCloud","_HassRouterPage","defaultPage","showLoading","initialLoad","_cloudStatusLoaded","beforeRender","page","logged_in","routes","login","tag","register","load","forgot-password","account","google-assistant","alexa","resolve","_resolveCloudStatusLoaded","_get","_getPrototypeOf","prototype","call","_flashMessage","oldStatus","undefined","route","prefix","el","_loginEmail","_currentPage","HassRouterPage"],"mappings":"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","file":"chunk.3667b0ccb9129bcfc7c4.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        .container {\n          position: relative;\n          display: inline-block;\n        }\n\n        mwc-button {\n          transition: all 1s;\n        }\n\n        .success mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-green-500);\n          transition: none;\n        }\n\n        .error mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-red-500);\n          transition: none;\n        }\n\n        .progress {\n          @apply --layout;\n          @apply --layout-center-center;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      </style>\n      <div class=\"container\" id=\"container\">\n        <mwc-button\n          id=\"button\"\n          disabled=\"[[computeDisabled(disabled, progress)]]\"\n          on-click=\"buttonTapped\"\n        >\n          <slot></slot>\n        </mwc-button>\n        <template is=\"dom-if\" if=\"[[progress]]\">\n          <div class=\"progress\"><paper-spinner active=\"\"></paper-spinner></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass(\"success\");\n  }\n\n  actionError() {\n    this.tempClass(\"error\");\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define(\"ha-progress-button\", HaProgressButton);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    this.icon =\n      window.getComputedStyle(this).direction === \"ltr\"\n        ? \"hass:chevron-right\"\n        : \"hass:chevron-left\";\n\n    // calling super after setting icon to have it consistently show the icon (otherwise not always shown)\n    super.connectedCallback();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { LitElement, html } from \"lit-element\";\n\nimport \"./ha-progress-button\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nclass HaCallApiButton extends LitElement {\n  render() {\n    return html`\n      <ha-progress-button\n        .progress=\"${this.progress}\"\n        @click=\"${this._buttonTapped}\"\n        ?disabled=\"${this.disabled}\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  constructor() {\n    super();\n    this.method = \"POST\";\n    this.data = {};\n    this.disabled = false;\n    this.progress = false;\n  }\n\n  static get properties() {\n    return {\n      hass: {},\n      progress: Boolean,\n      path: String,\n      method: String,\n      data: {},\n      disabled: Boolean,\n    };\n  }\n\n  get progressButton() {\n    return this.renderRoot.querySelector(\"ha-progress-button\");\n  }\n\n  async _buttonTapped() {\n    this.progress = true;\n    const eventData = {\n      method: this.method,\n      path: this.path,\n      data: this.data,\n    };\n\n    try {\n      const resp = await this.hass.callApi(this.method, this.path, this.data);\n      this.progress = false;\n      this.progressButton.actionSuccess();\n      eventData.success = true;\n      eventData.response = resp;\n    } catch (err) {\n      this.progress = false;\n      this.progressButton.actionError();\n      eventData.success = false;\n      eventData.response = err;\n    }\n\n    fireEvent(this, \"hass-api-called\", eventData);\n  }\n}\n\ncustomElements.define(\"ha-call-api-button\", HaCallApiButton);\n","import { HomeAssistant } from \"../types\";\n\nexport interface AlexaEntity {\n  entity_id: string;\n  display_categories: string[];\n  interfaces: string[];\n}\n\nexport const fetchCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS<AlexaEntity[]>({ type: \"cloud/alexa/entities\" });\n\nexport const syncCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS({ type: \"cloud/alexa/sync\" });\n","import { HomeAssistant } from \"../types\";\n\nexport interface Webhook {\n  webhook_id: string;\n  domain: string;\n  name: string;\n}\n\nexport const fetchWebhooks = (hass: HomeAssistant): Promise<Webhook[]> =>\n  hass.callWS({\n    type: \"webhook/list\",\n  });\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Webhook } from \"../../../../data/webhook\";\nimport { CloudWebhook } from \"../../../../data/cloud\";\n\nexport interface WebhookDialogParams {\n  webhook: Webhook;\n  cloudhook: CloudWebhook;\n  disableHook: () => void;\n}\n\nexport const showManageCloudhookDialog = (\n  element: HTMLElement,\n  webhookDialogParams: WebhookDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-manage-cloudhook\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"cloud-webhook-manage-dialog\" */ \"./dialog-manage-cloudhook\"),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../../components/ha-card\";\n\nimport { HomeAssistant, WebhookError } from \"../../../../types\";\nimport { Webhook, fetchWebhooks } from \"../../../../data/webhook\";\nimport {\n  createCloudhook,\n  deleteCloudhook,\n  CloudWebhook,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showManageCloudhookDialog } from \"../dialog-manage-cloudhook/show-dialog-manage-cloudhook\";\n\nexport class CloudWebhooks extends LitElement {\n  public hass?: HomeAssistant;\n  public cloudStatus?: CloudStatusLoggedIn;\n  private _cloudHooks?: { [webhookId: string]: CloudWebhook };\n  private _localHooks?: Webhook[];\n  private _progress: string[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      cloudStatus: {},\n      _cloudHooks: {},\n      _localHooks: {},\n      _progress: {},\n    };\n  }\n\n  constructor() {\n    super();\n    this._progress = [];\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._fetchData();\n  }\n\n  protected render() {\n    return html`\n      ${this.renderStyle()}\n      <ha-card header=\"Webhooks\">\n        <div class=\"card-content\">\n          Anything that is configured to be triggered by a webhook can be given\n          a publicly accessible URL to allow you to send data back to Home\n          Assistant from anywhere, without exposing your instance to the\n          internet. ${this._renderBody()}\n\n          <div class=\"footer\">\n            <a href=\"https://www.nabucasa.com/config/webhooks\" target=\"_blank\">\n              Learn more about creating webhook-powered automations.\n            </a>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"cloudStatus\") && this.cloudStatus) {\n      this._cloudHooks = this.cloudStatus.prefs.cloudhooks || {};\n    }\n  }\n\n  private _renderBody() {\n    if (!this.cloudStatus || !this._localHooks || !this._cloudHooks) {\n      return html`\n        <div class=\"body-text\">Loading…</div>\n      `;\n    }\n\n    if (this._localHooks.length === 0) {\n      return html`\n        <div class=\"body-text\">\n          Looks like you have no webhooks yet. Get started by configuring a\n          <a href=\"/config/integrations\">webhook-based integration</a> or by\n          creating a <a href=\"/config/automation/new\">webhook automation</a>.\n        </div>\n      `;\n    }\n\n    return this._localHooks.map(\n      (entry) => html`\n        <div class=\"webhook\" .entry=\"${entry}\">\n          <paper-item-body two-line>\n            <div>\n              ${entry.name}\n              ${entry.domain === entry.name.toLowerCase()\n                ? \"\"\n                : ` (${entry.domain})`}\n            </div>\n            <div secondary>${entry.webhook_id}</div>\n          </paper-item-body>\n          ${this._progress.includes(entry.webhook_id)\n            ? html`\n                <div class=\"progress\">\n                  <paper-spinner active></paper-spinner>\n                </div>\n              `\n            : this._cloudHooks![entry.webhook_id]\n            ? html`\n                <mwc-button @click=\"${this._handleManageButton}\">\n                  Manage\n                </mwc-button>\n              `\n            : html`\n                <paper-toggle-button\n                  @click=\"${this._enableWebhook}\"\n                ></paper-toggle-button>\n              `}\n        </div>\n      `\n    );\n  }\n\n  private _showDialog(webhookId: string) {\n    const webhook = this._localHooks!.find(\n      (ent) => ent.webhook_id === webhookId\n    )!;\n    const cloudhook = this._cloudHooks![webhookId];\n    showManageCloudhookDialog(this, {\n      webhook,\n      cloudhook,\n      disableHook: () => this._disableWebhook(webhookId),\n    });\n  }\n\n  private _handleManageButton(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry as Webhook;\n    this._showDialog(entry.webhook_id);\n  }\n\n  private async _enableWebhook(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry;\n    this._progress = [...this._progress, entry.webhook_id];\n    let updatedWebhook;\n\n    try {\n      updatedWebhook = await createCloudhook(this.hass!, entry.webhook_id);\n    } catch (err) {\n      alert((err as WebhookError).message);\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== entry.webhook_id);\n    }\n\n    this._cloudHooks = {\n      ...this._cloudHooks,\n      [entry.webhook_id]: updatedWebhook,\n    };\n\n    // Only open dialog if we're not also enabling others, otherwise it's confusing\n    if (this._progress.length === 0) {\n      this._showDialog(entry.webhook_id);\n    }\n  }\n\n  private async _disableWebhook(webhookId: string) {\n    this._progress = [...this._progress, webhookId];\n    try {\n      await deleteCloudhook(this.hass!, webhookId!);\n    } catch (err) {\n      alert(`Failed to disable webhook: ${(err as WebhookError).message}`);\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== webhookId);\n    }\n\n    // Remove cloud related parts from entry.\n    const { [webhookId]: disabledHook, ...newHooks } = this._cloudHooks!;\n    this._cloudHooks = newHooks;\n  }\n\n  private async _fetchData() {\n    this._localHooks = this.hass!.config.components.includes(\"webhook\")\n      ? await fetchWebhooks(this.hass!)\n      : [];\n  }\n\n  private renderStyle() {\n    return html`\n      <style>\n        .body-text {\n          padding: 8px 0;\n        }\n        .webhook {\n          display: flex;\n          padding: 4px 0;\n        }\n        .progress {\n          margin-right: 16px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .footer {\n          padding-top: 16px;\n        }\n        .body-text a,\n        .footer a {\n          color: var(--primary-color);\n        }\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-webhooks\": CloudWebhooks;\n  }\n}\n\ncustomElements.define(\"cloud-webhooks\", CloudWebhooks);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n// tslint:disable-next-line\nimport { PaperToggleButtonElement } from \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/ha-card\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { syncCloudAlexaEntities } from \"../../../../data/alexa\";\n\nexport class CloudAlexaPref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n  @property() private _syncing = false;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const { alexa_enabled, alexa_report_state } = this.cloudStatus!.prefs;\n\n    return html`\n      <ha-card header=\"Alexa\">\n        <paper-toggle-button\n          .checked=${alexa_enabled}\n          @change=${this._enabledToggleChanged}\n        ></paper-toggle-button>\n        <div class=\"card-content\">\n          With the Alexa integration for JAVIS Home Cloud you'll be able to\n          control all your JAVIS Home devices via any Alexa-enabled device.\n          <ul>\n            <li>\n              <a\n                href=\"https://skills-store.amazon.com/deeplink/dp/B0772J1QKB?deviceType=app\"\n                target=\"_blank\"\n              >\n                Enable the JAVIS Home skill for Alexa\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/amazon_alexa/\"\n                target=\"_blank\"\n              >\n                Config documentation\n              </a>\n            </li>\n          </ul>\n          <em\n            >This integration requires an Alexa-enabled device like the Amazon\n            Echo.</em\n          >\n          ${alexa_enabled\n            ? html`\n                <h3>Enable State Reporting</h3>\n                <p>\n                  If you enable state reporting, JAVIS Home will send\n                  <b>all</b> state changes of exposed entities to Amazon. This\n                  allows you to always see the latest states in the Alexa app\n                  and use the state changes to create routines.\n                </p>\n                <paper-toggle-button\n                  .checked=${alexa_report_state}\n                  @change=${this._reportToggleChanged}\n                ></paper-toggle-button>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._handleSync} .disabled=${this._syncing}>\n            Sync Entities\n          </mwc-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/alexa\">\n            <mwc-button>Manage Entities</mwc-button>\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _handleSync() {\n    this._syncing = true;\n    try {\n      await syncCloudAlexaEntities(this.hass!);\n    } catch (err) {\n      alert(`Failed to sync entities: ${err.body.message}`);\n    } finally {\n      this._syncing = false;\n    }\n  }\n\n  private async _enabledToggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n    try {\n      await updateCloudPref(this.hass!, { alexa_enabled: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _reportToggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n    try {\n      await updateCloudPref(this.hass!, {\n        alexa_report_state: toggle.checked!,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `Unable to ${toggle.checked ? \"enable\" : \"disable\"} report state. ${\n          err.message\n        }`\n      );\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card > paper-toggle-button {\n        margin: -4px 0;\n        position: absolute;\n        right: 8px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n      h3 {\n        margin-bottom: 0;\n      }\n      h3 + p {\n        margin-top: 0.5em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-alexa-pref\": CloudAlexaPref;\n  }\n}\n\ncustomElements.define(\"cloud-alexa-pref\", CloudAlexaPref);\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  TemplateResult,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n// tslint:disable-next-line\nimport { PaperToggleButtonElement } from \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport \"../../../../components/buttons/ha-call-api-button\";\n\nimport \"../../../../components/ha-card\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\n\nexport class CloudGooglePref extends LitElement {\n  public hass?: HomeAssistant;\n  public cloudStatus?: CloudStatusLoggedIn;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      cloudStatus: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      google_enabled,\n      google_secure_devices_pin,\n    } = this.cloudStatus.prefs;\n\n    return html`\n      <ha-card header=\"Google Assistant\">\n        <paper-toggle-button\n          id=\"google_enabled\"\n          .checked=\"${google_enabled}\"\n          @change=\"${this._toggleChanged}\"\n        ></paper-toggle-button>\n        <div class=\"card-content\">\n          With the Google Assistant integration for JAVIS Home Cloud you'll be\n          able to control all your JAVIS Home devices via any Google\n          Assistant-enabled device.\n          <ul>\n            <li>\n              <a\n                href=\"https://assistant.google.com/services/a/uid/00000091fd5fb875?hl=en-US\"\n                target=\"_blank\"\n              >\n                Activate the JAVIS Home skill for Google Assistant\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/google_assistant/\"\n                target=\"_blank\"\n              >\n                Config documentation\n              </a>\n            </li>\n          </ul>\n          <em\n            >This integration requires a Google Assistant-enabled device like\n            the Google Home or Android phone.</em\n          >\n          ${google_enabled\n            ? html`\n                <div class=\"secure_devices\">\n                  Please enter a pin to interact with security devices. Security\n                  devices are doors, garage doors and locks. You will be asked\n                  to say/enter this pin when interacting with such devices via\n                  Google Assistant.\n                  <paper-input\n                    label=\"Secure Devices Pin\"\n                    id=\"google_secure_devices_pin\"\n                    placeholder=\"Secure devices disabled\"\n                    .value=${google_secure_devices_pin || \"\"}\n                    @change=\"${this._pinChanged}\"\n                  ></paper-input>\n                </div>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-api-button\n            .hass=\"${this.hass}\"\n            .disabled=\"${!google_enabled}\"\n            path=\"cloud/google_actions/sync\"\n          >\n            Sync entities to Google\n          </ha-call-api-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/google-assistant\">\n            <mwc-button>Manage Entities</mwc-button>\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n    try {\n      await updateCloudPref(this.hass!, { [toggle.id]: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _pinChanged(ev) {\n    const input = ev.target as PaperInputElement;\n    try {\n      await updateCloudPref(this.hass!, {\n        [input.id]: input.value || null,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(`Unable to store pin: ${err.message}`);\n      input.value = this.cloudStatus!.prefs.google_secure_devices_pin;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card > paper-toggle-button {\n        margin: -4px 0;\n        position: absolute;\n        right: 8px;\n        top: 32px;\n      }\n      ha-call-api-button {\n        color: var(--primary-color);\n        font-weight: 500;\n      }\n      .secure_devices {\n        padding-top: 16px;\n      }\n      paper-input {\n        width: 200px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-google-pref\": CloudGooglePref;\n  }\n}\n\ncustomElements.define(\"cloud-google-pref\", CloudGooglePref);\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  TemplateResult,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport \"@polymer/paper-item/paper-item-body\";\n// tslint:disable-next-line\nimport { PaperToggleButtonElement } from \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/ha-card\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  connectCloudRemote,\n  disconnectCloudRemote,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showCloudCertificateDialog } from \"../dialog-cloud-certificate/show-dialog-cloud-certificate\";\n\n@customElement(\"cloud-remote-pref\")\nexport class CloudRemotePref extends LitElement {\n  public hass?: HomeAssistant;\n  public cloudStatus?: CloudStatusLoggedIn;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      cloudStatus: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      remote_connected,\n      remote_domain,\n      remote_certificate,\n    } = this.cloudStatus;\n\n    if (!remote_certificate) {\n      return html`\n        <ha-card header=\"Remote Control\">\n          <div class=\"preparing\">\n            Remote access is being prepared. We will notify you when it's ready.\n          </div>\n        </ha-card>\n      `;\n    }\n\n    return html`\n      <ha-card header=\"Remote Control\">\n        <paper-toggle-button\n          .checked=\"${remote_connected}\"\n          @change=\"${this._toggleChanged}\"\n        ></paper-toggle-button>\n        <div class=\"card-content\">\n          JAVIS Home Cloud provides a secure remote connection to your instance\n          while away from home. Your instance\n          ${remote_connected ? \"is\" : \"will be\"} available at\n          <a href=\"https://${remote_domain}\" target=\"_blank\">\n            https://${remote_domain}</a\n          >.\n        </div>\n        <div class=\"card-actions\">\n          <a href=\"https://www.nabucasa.com/config/remote/\" target=\"_blank\">\n            <mwc-button>Learn how it works</mwc-button>\n          </a>\n          ${remote_certificate\n            ? html`\n                <div class=\"spacer\"></div>\n                <mwc-button @click=${this._openCertInfo}>\n                  Certificate Info\n                </mwc-button>\n              `\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _openCertInfo() {\n    showCloudCertificateDialog(this, {\n      certificateInfo: this.cloudStatus!.remote_certificate!,\n    });\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n\n    try {\n      if (toggle.checked) {\n        await connectCloudRemote(this.hass!);\n      } else {\n        await disconnectCloudRemote(this.hass!);\n      }\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(err.message);\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .preparing {\n        padding: 0 16px 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      ha-card > paper-toggle-button {\n        margin: -4px 0;\n        position: absolute;\n        right: 8px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-remote-pref\": CloudRemotePref;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { CertificateInformation } from \"../../../../data/cloud\";\n\nexport interface CloudCertificateParams {\n  certificateInfo: CertificateInformation;\n}\n\nexport const showCloudCertificateDialog = (\n  element: HTMLElement,\n  webhookDialogParams: CloudCertificateParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-cloud-certificate\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"dialog-cloud-certificate\" */ \"./dialog-cloud-certificate\"),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-call-api-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\n\nimport \"../../ha-config-section\";\nimport \"./cloud-webhooks\";\n\nimport formatDateTime from \"../../../../common/datetime/format_date_time\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\nimport { fetchCloudSubscriptionInfo } from \"../../../../data/cloud\";\nimport \"./cloud-alexa-pref\";\nimport \"./cloud-google-pref\";\nimport \"./cloud-remote-pref\";\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudAccount extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        .account-row {\n          display: flex;\n          padding: 0 16px;\n        }\n        mwc-button {\n          align-self: center;\n        }\n        .soon {\n          font-style: italic;\n          margin-top: 24px;\n          text-align: center;\n        }\n        .nowrap {\n          white-space: nowrap;\n        }\n        .wrap {\n          white-space: normal;\n        }\n        .status {\n          text-transform: capitalize;\n          padding: 16px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n      </style>\n      <hass-subpage header=\"JAVIS Home Cloud\">\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">JAVIS Home Cloud</span>\n            <div slot=\"introduction\">\n              <p>\n                Thank you for being part of JAVIS Home Cloud. It's because of\n                people like you that we are able to make a great home automation\n                experience for everyone. Thank you!\n              </p>\n            </div>\n\n            <ha-card header=\"Nabu Casa Account\">\n              <div class=\"account-row\">\n                <paper-item-body two-line=\"\">\n                  [[cloudStatus.email]]\n                  <div secondary class=\"wrap\">\n                    [[_formatSubscription(_subscription)]]\n                  </div>\n                </paper-item-body>\n              </div>\n\n              <div class=\"account-row\">\n                <paper-item-body> Cloud connection status </paper-item-body>\n                <div class=\"status\">[[cloudStatus.cloud]]</div>\n              </div>\n\n              <div class=\"card-actions\">\n                <a href=\"https://account.nabucasa.com\" target=\"_blank\"\n                  ><mwc-button>Manage Account</mwc-button></a\n                >\n                <mwc-button style=\"float: right\" on-click=\"handleLogout\"\n                  >Sign out</mwc-button\n                >\n              </div>\n            </ha-card>\n          </ha-config-section>\n\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">Integrations</span>\n            <div slot=\"introduction\">\n              <p>\n                Integrations for JAVIS Home Cloud allow you to connect with\n                services in the cloud without having to expose your Home\n                Assistant instance publicly on the internet.\n              </p>\n              <p>\n                Check the website for\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >all available features</a\n                >.\n              </p>\n            </div>\n\n            <cloud-remote-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-remote-pref>\n\n            <cloud-alexa-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-alexa-pref>\n\n            <cloud-google-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-google-pref>\n\n            <cloud-webhooks\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-webhooks>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      cloudStatus: Object,\n      _subscription: {\n        type: Object,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._fetchSubscriptionInfo();\n  }\n\n  _computeRemoteConnected(connected) {\n    return connected ? \"Connected\" : \"Not Connected\";\n  }\n\n  async _fetchSubscriptionInfo() {\n    this._subscription = await fetchCloudSubscriptionInfo(this.hass);\n    if (\n      this._subscription.provider &&\n      this.cloudStatus &&\n      this.cloudStatus.cloud !== \"connected\"\n    ) {\n      this.fire(\"ha-refresh-cloud-status\");\n    }\n  }\n\n  handleLogout() {\n    this.hass\n      .callApi(\"post\", \"cloud/logout\")\n      .then(() => this.fire(\"ha-refresh-cloud-status\"));\n  }\n\n  _formatSubscription(subInfo) {\n    if (subInfo === null) {\n      return \"Fetching subscription…\";\n    }\n\n    let description = subInfo.human_description;\n\n    if (subInfo.plan_renewal_date) {\n      description = description.replace(\n        \"{periodEnd}\",\n        formatDateTime(\n          new Date(subInfo.plan_renewal_date * 1000),\n          this.hass.language\n        )\n      );\n    }\n\n    return description;\n  }\n}\n\ncustomElements.define(\"cloud-account\", CloudAccount);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-ripple/paper-ripple\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\n\nimport \"../../ha-config-section\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport NavigateMixin from \"../../../../mixins/navigate-mixin\";\nimport \"../../../../components/ha-icon-next\";\n/*\n * @appliesMixin NavigateMixin\n * @appliesMixin EventsMixin\n */\nclass CloudLogin extends NavigateMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        paper-item {\n          cursor: pointer;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card .card-header {\n          margin-bottom: -8px;\n        }\n        h1 {\n          @apply --paper-font-headline;\n          margin: 0;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        [hidden] {\n          display: none;\n        }\n        .flash-msg {\n          padding-right: 44px;\n        }\n        .flash-msg paper-icon-button {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          color: var(--secondary-text-color);\n        }\n      </style>\n      <hass-subpage header=\"Cloud Login\">\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">JAVIS Home Cloud</span>\n            <div slot=\"introduction\">\n              <p>\n                JAVIS Home Cloud provides you with a secure remote connection to\n                your instance while away from home. It also allows you to\n                connect with cloud-only services: Amazon Alexa and Google\n                Assistant.\n              </p>\n              <p>\n                This service is run by our partner\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >Nabu&nbsp;Casa,&nbsp;Inc</a\n                >, a company founded by the founders of JAVIS Home and Hass.io.\n              </p>\n              <p>\n                JAVIS Home Cloud is a subscription service with a free one month\n                trial. No payment information necessary.\n              </p>\n              <p>\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >Learn more about JAVIS Home Cloud</a\n                >\n              </p>\n            </div>\n\n            <ha-card hidden$=\"[[!flashMessage]]\">\n              <div class=\"card-content flash-msg\">\n                [[flashMessage]]\n                <paper-icon-button icon=\"hass:close\" on-click=\"_dismissFlash\"\n                  >Dismiss</paper-icon-button\n                >\n                <paper-ripple id=\"flashRipple\" noink=\"\"></paper-ripple>\n              </div>\n            </ha-card>\n\n            <ha-card header=\"Sign in\">\n              <div class=\"card-content\">\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n                <paper-input\n                  label=\"Email\"\n                  id=\"email\"\n                  type=\"email\"\n                  value=\"{{email}}\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"Invalid email\"\n                ></paper-input>\n                <paper-input\n                  id=\"password\"\n                  label=\"Password\"\n                  value=\"{{_password}}\"\n                  type=\"password\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"Passwords are at least 8 characters\"\n                ></paper-input>\n              </div>\n              <div class=\"card-actions\">\n                <ha-progress-button\n                  on-click=\"_handleLogin\"\n                  progress=\"[[_requestInProgress]]\"\n                  >Sign in</ha-progress-button\n                >\n                <button\n                  class=\"link\"\n                  hidden=\"[[_requestInProgress]]\"\n                  on-click=\"_handleForgotPassword\"\n                >\n                  forgot password?\n                </button>\n              </div>\n            </ha-card>\n\n            <ha-card>\n              <paper-item on-click=\"_handleRegister\">\n                <paper-item-body two-line=\"\">\n                  Start your free 1 month trial\n                  <div secondary=\"\">No payment information necessary</div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n      _password: {\n        type: String,\n        value: \"\",\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      flashMessage: {\n        type: String,\n        notify: true,\n      },\n      _error: String,\n    };\n  }\n\n  static get observers() {\n    return [\"_inputChanged(email, _password)\"];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.flashMessage) {\n      // Wait for DOM to be drawn\n      requestAnimationFrame(() =>\n        requestAnimationFrame(() => this.$.flashRipple.simulatedRipple())\n      );\n    }\n  }\n\n  _inputChanged() {\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n    this._error = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleLogin();\n      ev.preventDefault();\n    }\n  }\n\n  _handleLogin() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/login\", {\n        email: this.email,\n        password: this._password,\n      })\n      .then(\n        () => {\n          this.fire(\"ha-refresh-cloud-status\");\n          this.setProperties({\n            email: \"\",\n            _password: \"\",\n          });\n        },\n        (err) => {\n          // Do this before setProperties because changing it clears errors.\n          this._password = \"\";\n\n          const errCode = err && err.body && err.body.code;\n          if (errCode === \"PasswordChangeRequired\") {\n            alert(\"You need to change your password before logging in.\");\n            this.navigate(\"/config/cloud/forgot-password\");\n            return;\n          }\n\n          const props = {\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          };\n\n          if (errCode === \"UserNotConfirmed\") {\n            props._error = \"You need to confirm your email before logging in.\";\n          }\n\n          this.setProperties(props);\n          this.$.email.focus();\n        }\n      );\n  }\n\n  _handleRegister() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/register\");\n  }\n\n  _handleForgotPassword() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/forgot-password\");\n  }\n\n  _dismissFlash() {\n    // give some time to let the ripple finish.\n    setTimeout(() => {\n      this.flashMessage = \"\";\n    }, 200);\n  }\n}\n\ncustomElements.define(\"cloud-login\", CloudLogin);\n","import \"./account/cloud-account\";\nimport \"./login/cloud-login\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { property, customElement } from \"lit-element\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { navigate } from \"../../../common/navigate\";\nimport { CloudStatus } from \"../../../data/cloud\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\nconst LOGGED_IN_URLS = [\"account\", \"google-assistant\", \"alexa\"];\nconst NOT_LOGGED_IN_URLS = [\"login\", \"register\", \"forgot-password\"];\n\n@customElement(\"ha-config-cloud\")\nclass HaConfigCloud extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide!: boolean;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() public cloudStatus!: CloudStatus;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"login\",\n    showLoading: true,\n    initialLoad: () => this._cloudStatusLoaded,\n    // Guard the different pages based on if we're logged in.\n    beforeRender: (page: string) => {\n      if (this.cloudStatus.logged_in) {\n        if (!LOGGED_IN_URLS.includes(page)) {\n          return \"account\";\n        }\n      } else {\n        if (!NOT_LOGGED_IN_URLS.includes(page)) {\n          return \"login\";\n        }\n      }\n      return undefined;\n    },\n    routes: {\n      login: {\n        tag: \"cloud-login\",\n      },\n      register: {\n        tag: \"cloud-register\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-register\" */ \"./register/cloud-register\"),\n      },\n      \"forgot-password\": {\n        tag: \"cloud-forgot-password\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-forgot-password\" */ \"./forgot-password/cloud-forgot-password\"),\n      },\n      account: {\n        tag: \"cloud-account\",\n      },\n      \"google-assistant\": {\n        tag: \"cloud-google-assistant\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-google-assistant\" */ \"./google-assistant/cloud-google-assistant\"),\n      },\n      alexa: {\n        tag: \"cloud-alexa\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-alexa\" */ \"./alexa/cloud-alexa\"),\n      },\n    },\n  };\n\n  @property() private _flashMessage = \"\";\n  @property() private _loginEmail = \"\";\n  private _resolveCloudStatusLoaded!: () => void;\n  private _cloudStatusLoaded = new Promise((resolve) => {\n    this._resolveCloudStatusLoaded = resolve;\n  });\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"cloud-done\", (ev) => {\n      this._flashMessage = (ev as any).detail.flashMessage;\n      navigate(this, \"/config/cloud/login\");\n    });\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"cloudStatus\")) {\n      const oldStatus = changedProps.get(\"cloudStatus\") as\n        | CloudStatus\n        | undefined;\n      if (oldStatus === undefined) {\n        this._resolveCloudStatusLoaded();\n      } else if (oldStatus.logged_in !== this.cloudStatus.logged_in) {\n        navigate(this, this.route.prefix, true);\n      }\n    }\n  }\n\n  protected createElement(tag: string) {\n    const el = super.createElement(tag);\n    el.addEventListener(\"email-changed\", (ev) => {\n      this._loginEmail = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    el.addEventListener(\"flash-message-changed\", (ev) => {\n      this._flashMessage = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    return el;\n  }\n\n  protected updatePageEl(el) {\n    // We are not going to update if the current page if we are not logged in\n    // and the current page requires being logged in. Happens when we log out.\n    if (\n      this.cloudStatus &&\n      !this.cloudStatus.logged_in &&\n      LOGGED_IN_URLS.includes(this._currentPage)\n    ) {\n      return;\n    }\n\n    if (\"setProperties\" in el) {\n      // As long as we have Polymer pages\n      (el as PolymerElement).setProperties({\n        hass: this.hass,\n        email: this._loginEmail,\n        isWide: this.isWide,\n        cloudStatus: this.cloudStatus,\n        flashMessage: this._flashMessage,\n      });\n    } else {\n      el.hass = this.hass;\n      el.email = this._loginEmail;\n      el.isWide = this.isWide;\n      el.narrow = this.narrow;\n      el.cloudStatus = this.cloudStatus;\n      el.flashMessage = this._flashMessage;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-cloud\": HaConfigCloud;\n  }\n}\n"],"sourceRoot":""}