{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/components/buttons/ha-call-api-button.js","webpack:///./src/data/alexa.ts","webpack:///./src/panels/config/cloud/account/cloud-webhooks.ts","webpack:///./src/panels/config/cloud/dialog-manage-cloudhook/show-dialog-manage-cloudhook.ts","webpack:///./src/data/webhook.ts","webpack:///./src/panels/config/cloud/account/cloud-alexa-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-google-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-remote-pref.ts","webpack:///./src/panels/config/cloud/dialog-cloud-certificate/show-dialog-cloud-certificate.ts","webpack:///./src/panels/config/cloud/account/cloud-account.js","webpack:///./src/panels/config/cloud/login/cloud-login.js","webpack:///./src/panels/config/cloud/ha-config-cloud.ts"],"names":["EventsMixin","dedupingMixin","superClass","_superClass","_class","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","key","value","type","detail","options","fireEvent","node","get","hass","Object","localize","Function","computed","HaCard","property","css","_templateObject","html","_templateObject2","header","_templateObject3","_templateObject4","LitElement","customElements","define","ironIconClass","loaded","HaIcon","_ironIconClass","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","_iconsetName","eventName","methodName","_get","prototype","__webpack_require__","e","then","bind","HaConfigSection","PolymerElement","narrow","Boolean","isWide","classes","fecha__WEBPACK_IMPORTED_MODULE_0__","toLocaleStringSupportsOptions","Date","toLocaleString","name","dateObj","locales","year","month","day","hour","minute","fecha","format","HaProgressButton","progress","disabled","className","classList","$","container","add","setTimeout","remove","addEventListener","ev","buttonTapped","stopPropagation","tempClass","navigate","HaIconNext","_HaIcon","icon","window","getComputedStyle","direction","HaCallApiButton","method","data","_buttonTapped","eventData","path","callApi","resp","progressButton","actionSuccess","success","response","actionError","_context","t0","renderRoot","querySelector","String","d","__webpack_exports__","fetchCloudAlexaEntities","syncCloudAlexaEntities","callWS","CloudWebhooks","_LitElement","cloudStatus","_cloudHooks","_localHooks","_progress","_createClass","_fetchData","renderStyle","_renderBody","changedProps","has","prefs","cloudhooks","_this2","map","entry","domain","toLowerCase","webhook_id","includes","_templateObject5","_templateObject6","_handleManageButton","_templateObject7","_enableWebhook","webhookId","element","webhookDialogParams","_this3","webhook","find","ent","cloudhook","disableHook","_disableWebhook","dialogTag","dialogImport","Promise","all","dialogParams","currentTarget","parentElement","_showDialog","_enableWebhook2","_asyncToGenerator","regeneratorRuntime","mark","_callee","updatedWebhook","wrap","prev","next","_toConsumableArray","createCloudhook","sent","alert","message","abrupt","filter","wid","finish","assign","stop","_x","_disableWebhook2","_callee2","_ref","newHooks","_context2","deleteCloudhook","_objectWithoutProperties","_toPropertyKey","_x2","_fetchData2","_callee3","_context3","config","components","_templateObject8","CloudAlexaPref","_decorate","_initialize","F","_LitElement2","cloud_alexa_pref_classCallCheck","cloud_alexa_pref_getPrototypeOf","cloud_alexa_pref_assertThisInitialized","cloud_alexa_pref_inherits","kind","decorators","cloud_alexa_pref_templateObject","_prefs","alexa_enabled","alexa_report_state","cloud_alexa_pref_templateObject2","_enabledToggleChanged","cloud_alexa_pref_templateObject3","_reportToggleChanged","_handleSync","_syncing","_handleSync2","cloud_alexa_pref_asyncToGenerator","body","_enabledToggleChanged2","toggle","target","updateCloudPref","checked","_reportToggleChanged2","static","cloud_alexa_pref_templateObject4","CloudGooglePref","cloud_google_pref_classCallCheck","cloud_google_pref_possibleConstructorReturn","cloud_google_pref_getPrototypeOf","cloud_google_pref_inherits","cloud_google_pref_templateObject","_this$cloudStatus$pre","google_enabled","google_secure_devices_pin","cloud_google_pref_templateObject2","_toggleChanged","cloud_google_pref_templateObject3","_pinChanged","_toggleChanged2","cloud_google_pref_asyncToGenerator","cloud_google_pref_defineProperty","id","_pinChanged2","input","cloud_google_pref_templateObject4","cloud_remote_pref_decorate","customElement","CloudRemotePref","cloud_remote_pref_classCallCheck","cloud_remote_pref_getPrototypeOf","cloud_remote_pref_assertThisInitialized","cloud_remote_pref_inherits","cloud_remote_pref_templateObject","_this$cloudStatus","remote_connected","remote_domain","remote_certificate","cloud_remote_pref_templateObject3","cloud_remote_pref_templateObject4","_openCertInfo","cloud_remote_pref_templateObject2","certificateInfo","connectCloudRemote","disconnectCloudRemote","cloud_remote_pref_templateObject5","CloudAccount","LocalizeMixin","cloud_account_get","cloud_account_getPrototypeOf","_fetchSubscriptionInfo","connected","fetchCloudSubscriptionInfo","_subscription","provider","cloud","fire","subInfo","description","human_description","plan_renewal_date","replace","formatDateTime","language","cloud_account_templateObject","CloudLogin","NavigateMixin","cloud_login_templateObject","email","notify","_password","_requestInProgress","flashMessage","_error","cloud_login_get","cloud_login_getPrototypeOf","requestAnimationFrame","flashRipple","simulatedRipple","invalid","password","keyCode","_handleLogin","preventDefault","focus","setProperties","err","errCode","code","props","LOGGED_IN_URLS","NOT_LOGGED_IN_URLS","HaConfigCloud","defaultPage","showLoading","initialLoad","_cloudStatusLoaded","beforeRender","page","logged_in","routes","login","tag","register","load","forgot-password","account","google-assistant","alexa","resolve","_resolveCloudStatusLoaded","_this4","ha_config_cloud_get","ha_config_cloud_getPrototypeOf","_flashMessage","oldStatus","undefined","route","prefix","_this5","el","_loginEmail","_currentPage","HassRouterPage"],"mappings":"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","file":"chunk.ad897cc8b43f1c06c00f.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        .container {\n          position: relative;\n          display: inline-block;\n        }\n\n        mwc-button {\n          transition: all 1s;\n        }\n\n        .success mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-green-500);\n          transition: none;\n        }\n\n        .error mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-red-500);\n          transition: none;\n        }\n\n        .progress {\n          @apply --layout;\n          @apply --layout-center-center;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      </style>\n      <div class=\"container\" id=\"container\">\n        <mwc-button\n          id=\"button\"\n          disabled=\"[[computeDisabled(disabled, progress)]]\"\n          on-click=\"buttonTapped\"\n        >\n          <slot></slot>\n        </mwc-button>\n        <template is=\"dom-if\" if=\"[[progress]]\">\n          <div class=\"progress\"><paper-spinner active=\"\"></paper-spinner></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass(\"success\");\n  }\n\n  actionError() {\n    this.tempClass(\"error\");\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define(\"ha-progress-button\", HaProgressButton);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    this.icon =\n      window.getComputedStyle(this).direction === \"ltr\"\n        ? \"hass:chevron-right\"\n        : \"hass:chevron-left\";\n\n    // calling super after setting icon to have it consistently show the icon (otherwise not always shown)\n    super.connectedCallback();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { LitElement, html } from \"lit-element\";\n\nimport \"./ha-progress-button\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nclass HaCallApiButton extends LitElement {\n  render() {\n    return html`\n      <ha-progress-button\n        .progress=\"${this.progress}\"\n        @click=\"${this._buttonTapped}\"\n        ?disabled=\"${this.disabled}\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  constructor() {\n    super();\n    this.method = \"POST\";\n    this.data = {};\n    this.disabled = false;\n    this.progress = false;\n  }\n\n  static get properties() {\n    return {\n      hass: {},\n      progress: Boolean,\n      path: String,\n      method: String,\n      data: {},\n      disabled: Boolean,\n    };\n  }\n\n  get progressButton() {\n    return this.renderRoot.querySelector(\"ha-progress-button\");\n  }\n\n  async _buttonTapped() {\n    this.progress = true;\n    const eventData = {\n      method: this.method,\n      path: this.path,\n      data: this.data,\n    };\n\n    try {\n      const resp = await this.hass.callApi(this.method, this.path, this.data);\n      this.progress = false;\n      this.progressButton.actionSuccess();\n      eventData.success = true;\n      eventData.response = resp;\n    } catch (err) {\n      this.progress = false;\n      this.progressButton.actionError();\n      eventData.success = false;\n      eventData.response = err;\n    }\n\n    fireEvent(this, \"hass-api-called\", eventData);\n  }\n}\n\ncustomElements.define(\"ha-call-api-button\", HaCallApiButton);\n","import { HomeAssistant } from \"../types\";\n\nexport interface AlexaEntity {\n  entity_id: string;\n  display_categories: string[];\n  interfaces: string[];\n}\n\nexport const fetchCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS<AlexaEntity[]>({ type: \"cloud/alexa/entities\" });\n\nexport const syncCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS({ type: \"cloud/alexa/sync\" });\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  PropertyValues,\n} from \"lit-element\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../../components/ha-card\";\n\nimport { HomeAssistant, WebhookError } from \"../../../../types\";\nimport { Webhook, fetchWebhooks } from \"../../../../data/webhook\";\nimport {\n  createCloudhook,\n  deleteCloudhook,\n  CloudWebhook,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showManageCloudhookDialog } from \"../dialog-manage-cloudhook/show-dialog-manage-cloudhook\";\n\nexport class CloudWebhooks extends LitElement {\n  public hass?: HomeAssistant;\n  public cloudStatus?: CloudStatusLoggedIn;\n  private _cloudHooks?: { [webhookId: string]: CloudWebhook };\n  private _localHooks?: Webhook[];\n  private _progress: string[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      cloudStatus: {},\n      _cloudHooks: {},\n      _localHooks: {},\n      _progress: {},\n    };\n  }\n\n  constructor() {\n    super();\n    this._progress = [];\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._fetchData();\n  }\n\n  protected render() {\n    return html`\n      ${this.renderStyle()}\n      <ha-card header=\"Webhooks\">\n        <div class=\"card-content\">\n          Anything that is configured to be triggered by a webhook can be given\n          a publicly accessible URL to allow you to send data back to Home\n          Assistant from anywhere, without exposing your instance to the\n          internet. ${this._renderBody()}\n\n          <div class=\"footer\">\n            <a href=\"https://www.nabucasa.com/config/webhooks\" target=\"_blank\">\n              Learn more about creating webhook-powered automations.\n            </a>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"cloudStatus\") && this.cloudStatus) {\n      this._cloudHooks = this.cloudStatus.prefs.cloudhooks || {};\n    }\n  }\n\n  private _renderBody() {\n    if (!this.cloudStatus || !this._localHooks || !this._cloudHooks) {\n      return html`\n        <div class=\"body-text\">Loading…</div>\n      `;\n    }\n\n    if (this._localHooks.length === 0) {\n      return html`\n        <div class=\"body-text\">\n          Looks like you have no webhooks yet. Get started by configuring a\n          <a href=\"/config/integrations\">webhook-based integration</a> or by\n          creating a <a href=\"/config/automation/new\">webhook automation</a>.\n        </div>\n      `;\n    }\n\n    return this._localHooks.map(\n      (entry) => html`\n        <div class=\"webhook\" .entry=\"${entry}\">\n          <paper-item-body two-line>\n            <div>\n              ${entry.name}\n              ${entry.domain === entry.name.toLowerCase()\n                ? \"\"\n                : ` (${entry.domain})`}\n            </div>\n            <div secondary>${entry.webhook_id}</div>\n          </paper-item-body>\n          ${this._progress.includes(entry.webhook_id)\n            ? html`\n                <div class=\"progress\">\n                  <paper-spinner active></paper-spinner>\n                </div>\n              `\n            : this._cloudHooks![entry.webhook_id]\n            ? html`\n                <mwc-button @click=\"${this._handleManageButton}\">\n                  Manage\n                </mwc-button>\n              `\n            : html`\n                <paper-toggle-button\n                  @click=\"${this._enableWebhook}\"\n                ></paper-toggle-button>\n              `}\n        </div>\n      `\n    );\n  }\n\n  private _showDialog(webhookId: string) {\n    const webhook = this._localHooks!.find(\n      (ent) => ent.webhook_id === webhookId\n    )!;\n    const cloudhook = this._cloudHooks![webhookId];\n    showManageCloudhookDialog(this, {\n      webhook,\n      cloudhook,\n      disableHook: () => this._disableWebhook(webhookId),\n    });\n  }\n\n  private _handleManageButton(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry as Webhook;\n    this._showDialog(entry.webhook_id);\n  }\n\n  private async _enableWebhook(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry;\n    this._progress = [...this._progress, entry.webhook_id];\n    let updatedWebhook;\n\n    try {\n      updatedWebhook = await createCloudhook(this.hass!, entry.webhook_id);\n    } catch (err) {\n      alert((err as WebhookError).message);\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== entry.webhook_id);\n    }\n\n    this._cloudHooks = {\n      ...this._cloudHooks,\n      [entry.webhook_id]: updatedWebhook,\n    };\n\n    // Only open dialog if we're not also enabling others, otherwise it's confusing\n    if (this._progress.length === 0) {\n      this._showDialog(entry.webhook_id);\n    }\n  }\n\n  private async _disableWebhook(webhookId: string) {\n    this._progress = [...this._progress, webhookId];\n    try {\n      await deleteCloudhook(this.hass!, webhookId!);\n    } catch (err) {\n      alert(`Failed to disable webhook: ${(err as WebhookError).message}`);\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== webhookId);\n    }\n\n    // Remove cloud related parts from entry.\n    const { [webhookId]: disabledHook, ...newHooks } = this._cloudHooks!;\n    this._cloudHooks = newHooks;\n  }\n\n  private async _fetchData() {\n    this._localHooks = this.hass!.config.components.includes(\"webhook\")\n      ? await fetchWebhooks(this.hass!)\n      : [];\n  }\n\n  private renderStyle() {\n    return html`\n      <style>\n        .body-text {\n          padding: 8px 0;\n        }\n        .webhook {\n          display: flex;\n          padding: 4px 0;\n        }\n        .progress {\n          margin-right: 16px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .footer {\n          padding-top: 16px;\n        }\n        .body-text a,\n        .footer a {\n          color: var(--primary-color);\n        }\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-webhooks\": CloudWebhooks;\n  }\n}\n\ncustomElements.define(\"cloud-webhooks\", CloudWebhooks);\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Webhook } from \"../../../../data/webhook\";\nimport { CloudWebhook } from \"../../../../data/cloud\";\n\nexport interface WebhookDialogParams {\n  webhook: Webhook;\n  cloudhook: CloudWebhook;\n  disableHook: () => void;\n}\n\nexport const showManageCloudhookDialog = (\n  element: HTMLElement,\n  webhookDialogParams: WebhookDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-manage-cloudhook\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"cloud-webhook-manage-dialog\" */ \"./dialog-manage-cloudhook\"),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import { HomeAssistant } from \"../types\";\n\nexport interface Webhook {\n  webhook_id: string;\n  domain: string;\n  name: string;\n}\n\nexport const fetchWebhooks = (hass: HomeAssistant): Promise<Webhook[]> =>\n  hass.callWS({\n    type: \"webhook/list\",\n  });\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n// tslint:disable-next-line\nimport { PaperToggleButtonElement } from \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/ha-card\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { syncCloudAlexaEntities } from \"../../../../data/alexa\";\n\nexport class CloudAlexaPref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n  @property() private _syncing = false;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const { alexa_enabled, alexa_report_state } = this.cloudStatus!.prefs;\n\n    return html`\n      <ha-card header=\"Alexa\">\n        <paper-toggle-button\n          .checked=${alexa_enabled}\n          @change=${this._enabledToggleChanged}\n        ></paper-toggle-button>\n        <div class=\"card-content\">\n          With the Alexa integration for JAVIS Home Cloud you'll be able to\n          control all your JAVIS Home devices via any Alexa-enabled device.\n          <ul>\n            <li>\n              <a\n                href=\"https://skills-store.amazon.com/deeplink/dp/B0772J1QKB?deviceType=app\"\n                target=\"_blank\"\n              >\n                Enable the JAVIS Home skill for Alexa\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/amazon_alexa/\"\n                target=\"_blank\"\n              >\n                Config documentation\n              </a>\n            </li>\n          </ul>\n          <em\n            >This integration requires an Alexa-enabled device like the Amazon\n            Echo.</em\n          >\n          ${alexa_enabled\n            ? html`\n                <h3>Enable State Reporting</h3>\n                <p>\n                  If you enable state reporting, JAVIS Home will send\n                  <b>all</b> state changes of exposed entities to Amazon. This\n                  allows you to always see the latest states in the Alexa app\n                  and use the state changes to create routines.\n                </p>\n                <paper-toggle-button\n                  .checked=${alexa_report_state}\n                  @change=${this._reportToggleChanged}\n                ></paper-toggle-button>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._handleSync} .disabled=${this._syncing}>\n            Sync Entities\n          </mwc-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/alexa\">\n            <mwc-button>Manage Entities</mwc-button>\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _handleSync() {\n    this._syncing = true;\n    try {\n      await syncCloudAlexaEntities(this.hass!);\n    } catch (err) {\n      alert(`Failed to sync entities: ${err.body.message}`);\n    } finally {\n      this._syncing = false;\n    }\n  }\n\n  private async _enabledToggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n    try {\n      await updateCloudPref(this.hass!, { alexa_enabled: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _reportToggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n    try {\n      await updateCloudPref(this.hass!, {\n        alexa_report_state: toggle.checked!,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `Unable to ${toggle.checked ? \"enable\" : \"disable\"} report state. ${\n          err.message\n        }`\n      );\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card > paper-toggle-button {\n        margin: -4px 0;\n        position: absolute;\n        right: 8px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n      h3 {\n        margin-bottom: 0;\n      }\n      h3 + p {\n        margin-top: 0.5em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-alexa-pref\": CloudAlexaPref;\n  }\n}\n\ncustomElements.define(\"cloud-alexa-pref\", CloudAlexaPref);\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  TemplateResult,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n// tslint:disable-next-line\nimport { PaperToggleButtonElement } from \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport \"../../../../components/buttons/ha-call-api-button\";\n\nimport \"../../../../components/ha-card\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\n\nexport class CloudGooglePref extends LitElement {\n  public hass?: HomeAssistant;\n  public cloudStatus?: CloudStatusLoggedIn;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      cloudStatus: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      google_enabled,\n      google_secure_devices_pin,\n    } = this.cloudStatus.prefs;\n\n    return html`\n      <ha-card header=\"Google Assistant\">\n        <paper-toggle-button\n          id=\"google_enabled\"\n          .checked=\"${google_enabled}\"\n          @change=\"${this._toggleChanged}\"\n        ></paper-toggle-button>\n        <div class=\"card-content\">\n          With the Google Assistant integration for JAVIS Home Cloud you'll be\n          able to control all your JAVIS Home devices via any Google\n          Assistant-enabled device.\n          <ul>\n            <li>\n              <a\n                href=\"https://assistant.google.com/services/a/uid/00000091fd5fb875?hl=en-US\"\n                target=\"_blank\"\n              >\n                Activate the JAVIS Home skill for Google Assistant\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/google_assistant/\"\n                target=\"_blank\"\n              >\n                Config documentation\n              </a>\n            </li>\n          </ul>\n          <em\n            >This integration requires a Google Assistant-enabled device like\n            the Google Home or Android phone.</em\n          >\n          ${google_enabled\n            ? html`\n                <div class=\"secure_devices\">\n                  Please enter a pin to interact with security devices. Security\n                  devices are doors, garage doors and locks. You will be asked\n                  to say/enter this pin when interacting with such devices via\n                  Google Assistant.\n                  <paper-input\n                    label=\"Secure Devices Pin\"\n                    id=\"google_secure_devices_pin\"\n                    placeholder=\"Secure devices disabled\"\n                    .value=${google_secure_devices_pin || \"\"}\n                    @change=\"${this._pinChanged}\"\n                  ></paper-input>\n                </div>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-api-button\n            .hass=\"${this.hass}\"\n            .disabled=\"${!google_enabled}\"\n            path=\"cloud/google_actions/sync\"\n          >\n            Sync entities to Google\n          </ha-call-api-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/google-assistant\">\n            <mwc-button>Manage Entities</mwc-button>\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n    try {\n      await updateCloudPref(this.hass!, { [toggle.id]: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _pinChanged(ev) {\n    const input = ev.target as PaperInputElement;\n    try {\n      await updateCloudPref(this.hass!, {\n        [input.id]: input.value || null,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(`Unable to store pin: ${err.message}`);\n      input.value = this.cloudStatus!.prefs.google_secure_devices_pin;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card > paper-toggle-button {\n        margin: -4px 0;\n        position: absolute;\n        right: 8px;\n        top: 32px;\n      }\n      ha-call-api-button {\n        color: var(--primary-color);\n        font-weight: 500;\n      }\n      .secure_devices {\n        padding-top: 16px;\n      }\n      paper-input {\n        width: 200px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-google-pref\": CloudGooglePref;\n  }\n}\n\ncustomElements.define(\"cloud-google-pref\", CloudGooglePref);\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  TemplateResult,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport \"@polymer/paper-item/paper-item-body\";\n// tslint:disable-next-line\nimport { PaperToggleButtonElement } from \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/ha-card\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  connectCloudRemote,\n  disconnectCloudRemote,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showCloudCertificateDialog } from \"../dialog-cloud-certificate/show-dialog-cloud-certificate\";\n\n@customElement(\"cloud-remote-pref\")\nexport class CloudRemotePref extends LitElement {\n  public hass?: HomeAssistant;\n  public cloudStatus?: CloudStatusLoggedIn;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      cloudStatus: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      remote_connected,\n      remote_domain,\n      remote_certificate,\n    } = this.cloudStatus;\n\n    if (!remote_certificate) {\n      return html`\n        <ha-card header=\"Remote Control\">\n          <div class=\"preparing\">\n            Remote access is being prepared. We will notify you when it's ready.\n          </div>\n        </ha-card>\n      `;\n    }\n\n    return html`\n      <ha-card header=\"Remote Control\">\n        <paper-toggle-button\n          .checked=\"${remote_connected}\"\n          @change=\"${this._toggleChanged}\"\n        ></paper-toggle-button>\n        <div class=\"card-content\">\n          JAVIS Home Cloud provides a secure remote connection to your instance\n          while away from home. Your instance\n          ${remote_connected ? \"is\" : \"will be\"} available at\n          <a href=\"https://${remote_domain}\" target=\"_blank\">\n            https://${remote_domain}</a\n          >.\n        </div>\n        <div class=\"card-actions\">\n          <a href=\"https://www.nabucasa.com/config/remote/\" target=\"_blank\">\n            <mwc-button>Learn how it works</mwc-button>\n          </a>\n          ${remote_certificate\n            ? html`\n                <div class=\"spacer\"></div>\n                <mwc-button @click=${this._openCertInfo}>\n                  Certificate Info\n                </mwc-button>\n              `\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _openCertInfo() {\n    showCloudCertificateDialog(this, {\n      certificateInfo: this.cloudStatus!.remote_certificate!,\n    });\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as PaperToggleButtonElement;\n\n    try {\n      if (toggle.checked) {\n        await connectCloudRemote(this.hass!);\n      } else {\n        await disconnectCloudRemote(this.hass!);\n      }\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(err.message);\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .preparing {\n        padding: 0 16px 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      ha-card > paper-toggle-button {\n        margin: -4px 0;\n        position: absolute;\n        right: 8px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-remote-pref\": CloudRemotePref;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { CertificateInformation } from \"../../../../data/cloud\";\n\nexport interface CloudCertificateParams {\n  certificateInfo: CertificateInformation;\n}\n\nexport const showCloudCertificateDialog = (\n  element: HTMLElement,\n  webhookDialogParams: CloudCertificateParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-cloud-certificate\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"dialog-cloud-certificate\" */ \"./dialog-cloud-certificate\"),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-call-api-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\n\nimport \"../../ha-config-section\";\nimport \"./cloud-webhooks\";\n\nimport formatDateTime from \"../../../../common/datetime/format_date_time\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\nimport { fetchCloudSubscriptionInfo } from \"../../../../data/cloud\";\nimport \"./cloud-alexa-pref\";\nimport \"./cloud-google-pref\";\nimport \"./cloud-remote-pref\";\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudAccount extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        .account-row {\n          display: flex;\n          padding: 0 16px;\n        }\n        mwc-button {\n          align-self: center;\n        }\n        .soon {\n          font-style: italic;\n          margin-top: 24px;\n          text-align: center;\n        }\n        .nowrap {\n          white-space: nowrap;\n        }\n        .wrap {\n          white-space: normal;\n        }\n        .status {\n          text-transform: capitalize;\n          padding: 16px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n      </style>\n      <hass-subpage header=\"JAVIS Home Cloud\">\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">JAVIS Home Cloud</span>\n            <div slot=\"introduction\">\n              <p>\n                Thank you for being part of JAVIS Home Cloud. It's because of\n                people like you that we are able to make a great home automation\n                experience for everyone. Thank you!\n              </p>\n            </div>\n\n            <ha-card header=\"Nabu Casa Account\">\n              <div class=\"account-row\">\n                <paper-item-body two-line=\"\">\n                  [[cloudStatus.email]]\n                  <div secondary class=\"wrap\">\n                    [[_formatSubscription(_subscription)]]\n                  </div>\n                </paper-item-body>\n              </div>\n\n              <div class=\"account-row\">\n                <paper-item-body> Cloud connection status </paper-item-body>\n                <div class=\"status\">[[cloudStatus.cloud]]</div>\n              </div>\n\n              <div class=\"card-actions\">\n                <a href=\"https://account.nabucasa.com\" target=\"_blank\"\n                  ><mwc-button>Manage Account</mwc-button></a\n                >\n                <mwc-button style=\"float: right\" on-click=\"handleLogout\"\n                  >Sign out</mwc-button\n                >\n              </div>\n            </ha-card>\n          </ha-config-section>\n\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">Integrations</span>\n            <div slot=\"introduction\">\n              <p>\n                Integrations for JAVIS Home Cloud allow you to connect with\n                services in the cloud without having to expose your Home\n                Assistant instance publicly on the internet.\n              </p>\n              <p>\n                Check the website for\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >all available features</a\n                >.\n              </p>\n            </div>\n\n            <cloud-remote-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-remote-pref>\n\n            <cloud-alexa-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-alexa-pref>\n\n            <cloud-google-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-google-pref>\n\n            <cloud-webhooks\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-webhooks>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      cloudStatus: Object,\n      _subscription: {\n        type: Object,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._fetchSubscriptionInfo();\n  }\n\n  _computeRemoteConnected(connected) {\n    return connected ? \"Connected\" : \"Not Connected\";\n  }\n\n  async _fetchSubscriptionInfo() {\n    this._subscription = await fetchCloudSubscriptionInfo(this.hass);\n    if (\n      this._subscription.provider &&\n      this.cloudStatus &&\n      this.cloudStatus.cloud !== \"connected\"\n    ) {\n      this.fire(\"ha-refresh-cloud-status\");\n    }\n  }\n\n  handleLogout() {\n    this.hass\n      .callApi(\"post\", \"cloud/logout\")\n      .then(() => this.fire(\"ha-refresh-cloud-status\"));\n  }\n\n  _formatSubscription(subInfo) {\n    if (subInfo === null) {\n      return \"Fetching subscription…\";\n    }\n\n    let description = subInfo.human_description;\n\n    if (subInfo.plan_renewal_date) {\n      description = description.replace(\n        \"{periodEnd}\",\n        formatDateTime(\n          new Date(subInfo.plan_renewal_date * 1000),\n          this.hass.language\n        )\n      );\n    }\n\n    return description;\n  }\n}\n\ncustomElements.define(\"cloud-account\", CloudAccount);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-ripple/paper-ripple\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\n\nimport \"../../ha-config-section\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport NavigateMixin from \"../../../../mixins/navigate-mixin\";\nimport \"../../../../components/ha-icon-next\";\n/*\n * @appliesMixin NavigateMixin\n * @appliesMixin EventsMixin\n */\nclass CloudLogin extends NavigateMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        paper-item {\n          cursor: pointer;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card .card-header {\n          margin-bottom: -8px;\n        }\n        h1 {\n          @apply --paper-font-headline;\n          margin: 0;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        [hidden] {\n          display: none;\n        }\n        .flash-msg {\n          padding-right: 44px;\n        }\n        .flash-msg paper-icon-button {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          color: var(--secondary-text-color);\n        }\n      </style>\n      <hass-subpage header=\"Cloud Login\">\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">JAVIS Home Cloud</span>\n            <div slot=\"introduction\">\n              <p>\n                JAVIS Home Cloud provides you with a secure remote connection to\n                your instance while away from home. It also allows you to\n                connect with cloud-only services: Amazon Alexa and Google\n                Assistant.\n              </p>\n              <p>\n                This service is run by our partner\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >Nabu&nbsp;Casa,&nbsp;Inc</a\n                >, a company founded by the founders of JAVIS Home and Hass.io.\n              </p>\n              <p>\n                JAVIS Home Cloud is a subscription service with a free one month\n                trial. No payment information necessary.\n              </p>\n              <p>\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >Learn more about JAVIS Home Cloud</a\n                >\n              </p>\n            </div>\n\n            <ha-card hidden$=\"[[!flashMessage]]\">\n              <div class=\"card-content flash-msg\">\n                [[flashMessage]]\n                <paper-icon-button icon=\"hass:close\" on-click=\"_dismissFlash\"\n                  >Dismiss</paper-icon-button\n                >\n                <paper-ripple id=\"flashRipple\" noink=\"\"></paper-ripple>\n              </div>\n            </ha-card>\n\n            <ha-card header=\"Sign in\">\n              <div class=\"card-content\">\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n                <paper-input\n                  label=\"Email\"\n                  id=\"email\"\n                  type=\"email\"\n                  value=\"{{email}}\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"Invalid email\"\n                ></paper-input>\n                <paper-input\n                  id=\"password\"\n                  label=\"Password\"\n                  value=\"{{_password}}\"\n                  type=\"password\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"Passwords are at least 8 characters\"\n                ></paper-input>\n              </div>\n              <div class=\"card-actions\">\n                <ha-progress-button\n                  on-click=\"_handleLogin\"\n                  progress=\"[[_requestInProgress]]\"\n                  >Sign in</ha-progress-button\n                >\n                <button\n                  class=\"link\"\n                  hidden=\"[[_requestInProgress]]\"\n                  on-click=\"_handleForgotPassword\"\n                >\n                  forgot password?\n                </button>\n              </div>\n            </ha-card>\n\n            <ha-card>\n              <paper-item on-click=\"_handleRegister\">\n                <paper-item-body two-line=\"\">\n                  Start your free 1 month trial\n                  <div secondary=\"\">No payment information necessary</div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n      _password: {\n        type: String,\n        value: \"\",\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      flashMessage: {\n        type: String,\n        notify: true,\n      },\n      _error: String,\n    };\n  }\n\n  static get observers() {\n    return [\"_inputChanged(email, _password)\"];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.flashMessage) {\n      // Wait for DOM to be drawn\n      requestAnimationFrame(() =>\n        requestAnimationFrame(() => this.$.flashRipple.simulatedRipple())\n      );\n    }\n  }\n\n  _inputChanged() {\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n    this._error = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleLogin();\n      ev.preventDefault();\n    }\n  }\n\n  _handleLogin() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/login\", {\n        email: this.email,\n        password: this._password,\n      })\n      .then(\n        () => {\n          this.fire(\"ha-refresh-cloud-status\");\n          this.setProperties({\n            email: \"\",\n            _password: \"\",\n          });\n        },\n        (err) => {\n          // Do this before setProperties because changing it clears errors.\n          this._password = \"\";\n\n          const errCode = err && err.body && err.body.code;\n          if (errCode === \"PasswordChangeRequired\") {\n            alert(\"You need to change your password before logging in.\");\n            this.navigate(\"/config/cloud/forgot-password\");\n            return;\n          }\n\n          const props = {\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          };\n\n          if (errCode === \"UserNotConfirmed\") {\n            props._error = \"You need to confirm your email before logging in.\";\n          }\n\n          this.setProperties(props);\n          this.$.email.focus();\n        }\n      );\n  }\n\n  _handleRegister() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/register\");\n  }\n\n  _handleForgotPassword() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/forgot-password\");\n  }\n\n  _dismissFlash() {\n    // give some time to let the ripple finish.\n    setTimeout(() => {\n      this.flashMessage = \"\";\n    }, 200);\n  }\n}\n\ncustomElements.define(\"cloud-login\", CloudLogin);\n","import \"./account/cloud-account\";\nimport \"./login/cloud-login\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { property, customElement } from \"lit-element\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { navigate } from \"../../../common/navigate\";\nimport { CloudStatus } from \"../../../data/cloud\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\nconst LOGGED_IN_URLS = [\"account\", \"google-assistant\", \"alexa\"];\nconst NOT_LOGGED_IN_URLS = [\"login\", \"register\", \"forgot-password\"];\n\n@customElement(\"ha-config-cloud\")\nclass HaConfigCloud extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide!: boolean;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() public cloudStatus!: CloudStatus;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"login\",\n    showLoading: true,\n    initialLoad: () => this._cloudStatusLoaded,\n    // Guard the different pages based on if we're logged in.\n    beforeRender: (page: string) => {\n      if (this.cloudStatus.logged_in) {\n        if (!LOGGED_IN_URLS.includes(page)) {\n          return \"account\";\n        }\n      } else {\n        if (!NOT_LOGGED_IN_URLS.includes(page)) {\n          return \"login\";\n        }\n      }\n      return undefined;\n    },\n    routes: {\n      login: {\n        tag: \"cloud-login\",\n      },\n      register: {\n        tag: \"cloud-register\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-register\" */ \"./register/cloud-register\"),\n      },\n      \"forgot-password\": {\n        tag: \"cloud-forgot-password\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-forgot-password\" */ \"./forgot-password/cloud-forgot-password\"),\n      },\n      account: {\n        tag: \"cloud-account\",\n      },\n      \"google-assistant\": {\n        tag: \"cloud-google-assistant\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-google-assistant\" */ \"./google-assistant/cloud-google-assistant\"),\n      },\n      alexa: {\n        tag: \"cloud-alexa\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-alexa\" */ \"./alexa/cloud-alexa\"),\n      },\n    },\n  };\n\n  @property() private _flashMessage = \"\";\n  @property() private _loginEmail = \"\";\n  private _resolveCloudStatusLoaded!: () => void;\n  private _cloudStatusLoaded = new Promise((resolve) => {\n    this._resolveCloudStatusLoaded = resolve;\n  });\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"cloud-done\", (ev) => {\n      this._flashMessage = (ev as any).detail.flashMessage;\n      navigate(this, \"/config/cloud/login\");\n    });\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"cloudStatus\")) {\n      const oldStatus = changedProps.get(\"cloudStatus\") as\n        | CloudStatus\n        | undefined;\n      if (oldStatus === undefined) {\n        this._resolveCloudStatusLoaded();\n      } else if (oldStatus.logged_in !== this.cloudStatus.logged_in) {\n        navigate(this, this.route.prefix, true);\n      }\n    }\n  }\n\n  protected createElement(tag: string) {\n    const el = super.createElement(tag);\n    el.addEventListener(\"email-changed\", (ev) => {\n      this._loginEmail = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    el.addEventListener(\"flash-message-changed\", (ev) => {\n      this._flashMessage = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    return el;\n  }\n\n  protected updatePageEl(el) {\n    // We are not going to update if the current page if we are not logged in\n    // and the current page requires being logged in. Happens when we log out.\n    if (\n      this.cloudStatus &&\n      !this.cloudStatus.logged_in &&\n      LOGGED_IN_URLS.includes(this._currentPage)\n    ) {\n      return;\n    }\n\n    if (\"setProperties\" in el) {\n      // As long as we have Polymer pages\n      (el as PolymerElement).setProperties({\n        hass: this.hass,\n        email: this._loginEmail,\n        isWide: this.isWide,\n        cloudStatus: this.cloudStatus,\n        flashMessage: this._flashMessage,\n      });\n    } else {\n      el.hass = this.hass;\n      el.email = this._loginEmail;\n      el.isWide = this.isWide;\n      el.narrow = this.narrow;\n      el.cloudStatus = this.cloudStatus;\n      el.flashMessage = this._flashMessage;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-cloud\": HaConfigCloud;\n  }\n}\n"],"sourceRoot":""}