{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-gauge-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiEntityEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","_this2","entities","html","_templateObject2","map","entityConf","index","_templateObject3","hass","entity","_valueChanged","_addEntity","_templateObject","ev","target","newConfigEntities","fireEvent","splice","Object","assign","static","css","_templateObject4","LitElement","cardConfigStruct","type","name","unit","min","max","severity","theme","HuiGaugeCardEditor","config","_useSeverity","_config","number","undefined","configElementStyle","_name","_entity","_unit","_theme","_min","_max","_toggleSeverity","_severity","green","_severityChanged","yellow","red","checked","_defineProperty","configValue","Number","isNaN"],"mappings":"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","file":"chunk.c4e4ebe4870370c96781.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <ha-entity-picker\n              .hass=\"${this.hass}\"\n              .value=\"${entityConf.entity}\"\n              .index=\"${index}\"\n              @change=\"${this._valueChanged}\"\n              allow-custom-entity\n            ></ha-entity-picker>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GaugeCardConfig, SeverityConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  unit: \"string?\",\n  min: \"number?\",\n  max: \"number?\",\n  severity: \"object?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-gauge-card-editor\")\nexport class HuiGaugeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GaugeCardConfig;\n\n  private _useSeverity?: boolean;\n\n  public setConfig(config: GaugeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._useSeverity = !!config.severity;\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _min(): number {\n    return this._config!.number || 0;\n  }\n\n  get _max(): number {\n    return this._config!.max || 100;\n  }\n\n  get _severity(): SeverityConfig | undefined {\n    return this._config!.severity || undefined;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=${\"name\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"sensor\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Unit\"\n            .value=\"${this._unit}\"\n            .configValue=${\"unit\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            label=\"Minimum\"\n            .value=\"${this._min}\"\n            .configValue=${\"min\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            label=\"Maximum\"\n            .value=\"${this._max}\"\n            .configValue=${\"max\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._useSeverity !== false}\"\n            @change=\"${this._toggleSeverity}\"\n            >Define Severity?</paper-toggle-button\n          >\n          <div class=\"severity\">\n            <paper-input\n              type=\"number\"\n              label=\"Green\"\n              .value=\"${this._severity ? this._severity.green : 0}\"\n              .configValue=${\"green\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Yellow\"\n              .value=\"${this._severity ? this._severity.yellow : 0}\"\n              .configValue=${\"yellow\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Red\"\n              .value=\"${this._severity ? this._severity.red : 0}\"\n              .configValue=${\"red\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .severity {\n        display: none;\n        width: 100%;\n        padding-left: 16px;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n      .severity > * {\n        flex: 1 0 30%;\n        padding-right: 4px;\n      }\n      paper-toggle-button[checked] ~ .severity {\n        display: flex;\n      }\n    `;\n  }\n\n  private _toggleSeverity(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    this._config.severity = target.checked\n      ? {\n          green: 0,\n          yellow: 0,\n          red: 0,\n        }\n      : undefined;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _severityChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const severity = {\n      ...this._config.severity,\n      [target.configValue!]: Number(target.value),\n    };\n    this._config = {\n      ...this._config,\n      severity,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card-editor\": HuiGaugeCardEditor;\n  }\n}\n"],"sourceRoot":""}