{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-icon/iron-icon.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/util/debounce.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/data/config_entries.ts","webpack:///./src/dialogs/config-flow/show-dialog-config-flow.ts","webpack:///./src/onboarding/integration-badge.ts","webpack:///./src/onboarding/onboarding-integrations.ts"],"names":["Polymer","_template","html","_templateObject","is","properties","icon","type","String","theme","src","_meta","value","Base","create","observers","_DEFAULT_ICONSET","_iconChanged","parts","split","this","_iconName","pop","_iconsetName","_updateIcon","_srcChanged","_usesIconset","_img","parentNode","dom","root","removeChild","_iconset","removeIcon","byKey","applyIcon","unlisten","window","listen","document","createElement","style","width","height","draggable","appendChild","ironIconClass","customElements","get","loaded","HaIcon","_ironIconClass","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_inherits","key","node","eventName","methodName","_get","prototype","__webpack_require__","e","then","bind","define","d","__webpack_exports__","debounce","func","wait","timeout","immediate","undefined","context","callNow","clearTimeout","setTimeout","compare","caseInsensitiveCompare","a","b","toLowerCase","createConfigFlow","fetchConfigFlow","handleConfigFlowStep","deleteConfigFlow","getConfigFlowsInProgress","getConfigFlowHandlers","getConfigEntries","localizeConfigFlowTitle","hass","handler","callApi","flowId","data","localize","flow","placeholders","title_placeholders","placeholderKeys","Object","keys","forEach","push","loadConfigFlowDialog","showConfigFlowDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","Promise","all","element","dialogParams","fireEvent","dialogTag","dialogImport","customElement","property","Boolean","reflect","badgeIcon","_templateObject2","title","css","_templateObject3","LitElement","OnboardingIntegrations","_this2","onboarding_integrations_getPrototypeOf","connection","subscribeEvents","_loadData","unsub","_unsubEvents","_this3","_entries","_discovered","onboarding_integrations_templateObject","entries","map","entry","domain","onboarding_integrations_templateObject2","discovered","onboarding_integrations_templateObject3","flow_id","_continueFlow","content","_toConsumableArray","sort","item","_templateObject4","onboardingLocalize","_createFlow","_finish","changedProps","t","_this4","dialogClosedCallback","ev","_this5","continueFlowId","currentTarget","_callee","_ref","_ref2","regeneratorRuntime","wrap","_context","prev","next","sent","_slicedToArray","filter","stop","_callee2","result","_context2","onboardIntegrationStep","client_id","genClientId","_templateObject5"],"mappings":"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","file":"chunk.84b3b7aa31dd74fa72ec.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { HomeAssistant } from \"../types\";\nimport { createCollection } from \"home-assistant-js-websocket\";\nimport { debounce } from \"../common/util/debounce\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\n\nexport interface DataEntryFlowProgressedEvent {\n  type: \"data_entry_flow_progressed\";\n  data: {\n    handler: string;\n    flow_id: string;\n    refresh: boolean;\n  };\n}\n\nexport interface ConfigEntry {\n  entry_id: string;\n  domain: string;\n  title: string;\n  source: string;\n  state: string;\n  connection_class: string;\n  supports_options: boolean;\n}\n\nexport interface FieldSchema {\n  name: string;\n  default?: any;\n  optional: boolean;\n}\n\nexport interface ConfigFlowProgress {\n  flow_id: string;\n  handler: string;\n  context: {\n    title_placeholders: { [key: string]: string };\n    [key: string]: any;\n  };\n}\n\nexport interface ConfigFlowStepForm {\n  type: \"form\";\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  data_schema: FieldSchema[];\n  errors: { [key: string]: string };\n  description_placeholders: { [key: string]: string };\n}\n\nexport interface ConfigFlowStepExternal {\n  type: \"external\";\n  flow_id: string;\n  handler: string;\n  step_id: string;\n  url: string;\n  description_placeholders: { [key: string]: string };\n}\n\nexport interface ConfigFlowStepCreateEntry {\n  type: \"create_entry\";\n  version: number;\n  flow_id: string;\n  handler: string;\n  title: string;\n  // Config entry ID\n  result: string;\n  description: string;\n  description_placeholders: { [key: string]: string };\n}\n\nexport interface ConfigFlowStepAbort {\n  type: \"abort\";\n  flow_id: string;\n  handler: string;\n  reason: string;\n  description_placeholders: { [key: string]: string };\n}\n\nexport type ConfigFlowStep =\n  | ConfigFlowStepForm\n  | ConfigFlowStepExternal\n  | ConfigFlowStepCreateEntry\n  | ConfigFlowStepAbort;\n\nexport const createConfigFlow = (hass: HomeAssistant, handler: string) =>\n  hass.callApi<ConfigFlowStep>(\"POST\", \"config/config_entries/flow\", {\n    handler,\n  });\n\nexport const fetchConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi<ConfigFlowStep>(\"GET\", `config/config_entries/flow/${flowId}`);\n\nexport const handleConfigFlowStep = (\n  hass: HomeAssistant,\n  flowId: string,\n  data: { [key: string]: any }\n) =>\n  hass.callApi<ConfigFlowStep>(\n    \"POST\",\n    `config/config_entries/flow/${flowId}`,\n    data\n  );\n\nexport const deleteConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi(\"DELETE\", `config/config_entries/flow/${flowId}`);\n\nexport const getConfigFlowsInProgress = (hass: HomeAssistant) =>\n  hass.callApi<ConfigFlowProgress[]>(\"GET\", \"config/config_entries/flow\");\n\nexport const getConfigFlowHandlers = (hass: HomeAssistant) =>\n  hass.callApi<string[]>(\"GET\", \"config/config_entries/flow_handlers\");\n\nconst fetchConfigFlowInProgress = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/entity_registry/list\",\n  });\n\nconst subscribeConfigFlowInProgressUpdates = (conn, store) =>\n  debounce(\n    conn.subscribeEvents(\n      () =>\n        fetchConfigFlowInProgress(conn).then((flows) =>\n          store.setState(flows, true)\n        ),\n      500,\n      true\n    ),\n    \"config_entry_discovered\"\n  );\n\nexport const subscribeConfigFlowInProgress = (\n  hass: HomeAssistant,\n  onChange: (flows: ConfigFlowProgress[]) => void\n) =>\n  createCollection<ConfigFlowProgress[]>(\n    \"_configFlowProgress\",\n    fetchConfigFlowInProgress,\n    subscribeConfigFlowInProgressUpdates,\n    hass.connection,\n    onChange\n  );\n\nexport const getConfigEntries = (hass: HomeAssistant) =>\n  hass.callApi<ConfigEntry[]>(\"GET\", \"config/config_entries/entry\");\n\nexport const localizeConfigFlowTitle = (\n  localize: LocalizeFunc,\n  flow: ConfigFlowProgress\n) => {\n  const placeholders = flow.context.title_placeholders || {};\n  const placeholderKeys = Object.keys(placeholders);\n  if (placeholderKeys.length === 0) {\n    return localize(`component.${flow.handler}.config.title`);\n  }\n  const args: string[] = [];\n  placeholderKeys.forEach((key) => {\n    args.push(key);\n    args.push(placeholders[key]);\n  });\n  return localize(`component.${flow.handler}.config.flow_title`, ...args);\n};\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface HaConfigFlowParams {\n  continueFlowId?: string;\n  dialogClosedCallback: (params: { flowFinished: boolean }) => void;\n}\n\nexport const loadConfigFlowDialog = () =>\n  import(/* webpackChunkName: \"dialog-config-flow\" */ \"./dialog-config-flow\");\n\nexport const showConfigFlowDialog = (\n  element: HTMLElement,\n  dialogParams: HaConfigFlowParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-config-flow\",\n    dialogImport: loadConfigFlowDialog,\n    dialogParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"../components/ha-icon\";\n\n@customElement(\"integration-badge\")\nclass IntegrationBadge extends LitElement {\n  @property() public icon!: string;\n  @property() public title!: string;\n  @property() public badgeIcon?: string;\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"icon\">\n        <iron-icon .icon=${this.icon}></iron-icon>\n        ${this.badgeIcon\n          ? html`\n              <ha-icon class=\"badge\" .icon=${this.badgeIcon}></ha-icon>\n            `\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      .icon {\n        position: relative;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        border-radius: 50%;\n        border: 1px solid var(--secondary-text-color);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      :host([clickable]) .icon {\n        border-color: var(--primary-color);\n        border-width: 2px;\n      }\n\n      .badge {\n        position: absolute;\n        color: var(--primary-color);\n        bottom: -5px;\n        right: -5px;\n        background-color: white;\n        border-radius: 50%;\n        width: 18px;\n        display: block;\n        height: 18px;\n      }\n\n      .title {\n        min-height: 2.3em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integration-badge\": IntegrationBadge;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  customElement,\n  PropertyValues,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport {\n  loadConfigFlowDialog,\n  showConfigFlowDialog,\n} from \"../dialogs/config-flow/show-dialog-config-flow\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  getConfigFlowsInProgress,\n  getConfigEntries,\n  ConfigEntry,\n  ConfigFlowProgress,\n  localizeConfigFlowTitle,\n} from \"../data/config_entries\";\nimport { compare } from \"../common/string/compare\";\nimport \"./integration-badge\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { debounce } from \"../common/util/debounce\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { onboardIntegrationStep } from \"../data/onboarding\";\nimport { genClientId } from \"home-assistant-js-websocket\";\n\n@customElement(\"onboarding-integrations\")\nclass OnboardingIntegrations extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n  @property() private _entries?: ConfigEntry[];\n  @property() private _discovered?: ConfigFlowProgress[];\n  private _unsubEvents?: () => void;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this.hass.connection\n      .subscribeEvents(\n        debounce(() => this._loadData(), 500),\n        \"config_entry_discovered\"\n      )\n      .then((unsub) => {\n        this._unsubEvents = unsub;\n      });\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) {\n      this._unsubEvents();\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._entries || !this._discovered) {\n      return html``;\n    }\n    // Render discovered and existing entries together sorted by localized title.\n    const entries: Array<[string, TemplateResult]> = this._entries.map(\n      (entry) => {\n        const title = this.hass.localize(\n          `component.${entry.domain}.config.title`\n        );\n        return [\n          title,\n          html`\n            <integration-badge\n              .title=${title}\n              icon=\"hass:check\"\n            ></integration-badge>\n          `,\n        ];\n      }\n    );\n    const discovered: Array<[string, TemplateResult]> = this._discovered.map(\n      (flow) => {\n        const title = localizeConfigFlowTitle(this.hass.localize, flow);\n        return [\n          title,\n          html`\n            <button .flowId=${flow.flow_id} @click=${this._continueFlow}>\n              <integration-badge\n                clickable\n                .title=${title}\n                icon=\"hass:plus\"\n              ></integration-badge>\n            </button>\n          `,\n        ];\n      }\n    );\n    const content = [...entries, ...discovered]\n      .sort((a, b) => compare(a[0], b[0]))\n      .map((item) => item[1]);\n\n    return html`\n      <p>\n        ${this.onboardingLocalize(\"ui.panel.page-onboarding.integration.intro\")}\n      </p>\n      <div class=\"badges\">\n        ${content}\n        <button @click=${this._createFlow}>\n          <integration-badge\n            clickable\n            title=${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.integration.more_integrations\"\n            )}\n            icon=\"hass:dots-horizontal\"\n          ></integration-badge>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <mwc-button @click=${this._finish}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.integration.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    loadConfigFlowDialog();\n    this._loadData();\n    /* polyfill for paper-dropdown */\n    import(/* webpackChunkName: \"polyfill-web-animations-next\" */ \"web-animations-js/web-animations-next-lite.min\");\n  }\n\n  private _createFlow() {\n    showConfigFlowDialog(this, {\n      dialogClosedCallback: () => this._loadData(),\n    });\n  }\n\n  private _continueFlow(ev) {\n    showConfigFlowDialog(this, {\n      continueFlowId: ev.currentTarget.flowId,\n      dialogClosedCallback: () => this._loadData(),\n    });\n  }\n\n  private async _loadData() {\n    const [discovered, entries] = await Promise.all([\n      getConfigFlowsInProgress(this.hass!),\n      getConfigEntries(this.hass!),\n    ]);\n    this._discovered = discovered;\n    // We filter out the config entry for the local weather.\n    // It is one that we create automatically and it will confuse the user\n    // if it starts showing up during onboarding.\n    this._entries = entries.filter((entry) => entry.domain !== \"met\");\n  }\n\n  private async _finish() {\n    const result = await onboardIntegrationStep(this.hass, {\n      client_id: genClientId(),\n    });\n    fireEvent(this, \"onboarding-step\", {\n      type: \"integration\",\n      result,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .badges {\n        margin-top: 24px;\n      }\n      .badges > * {\n        width: 24%;\n        min-width: 90px;\n        margin-bottom: 24px;\n      }\n      button {\n        display: inline-block;\n        cursor: pointer;\n        padding: 0;\n        border: 0;\n        background: 0;\n        font: inherit;\n      }\n      .footer {\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-integrations\": OnboardingIntegrations;\n  }\n}\n"],"sourceRoot":""}